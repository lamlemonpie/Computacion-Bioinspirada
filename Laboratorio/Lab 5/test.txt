
COMIENZO PROCESO:  01-05-2019 22:35:26
Población Inicial:
 ['(- (+ -3 x) (* 1 x))', '(/ (* x x) (- x -4))', '(- (* x x) (* x -5))', '(* (/ x 4) (* -3 0))', '(* (/ x x) (* x x))', '(- (+ -5 5) (+ x x))', '(* (* x 3) (* x x))', '(* (- 2 2) (- 4 x))', '(* (/ -1 -5) (- x x))', '(/ (- -5 x) (* x -1))']

GENERACION: 1
0 : calculando con  (- (+ -3 x) (* 1 x))
ECM: 9.893332500000001 

1 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

2 : calculando con  (- (* x x) (* x -5))
ECM: 8.1758325 

3 : calculando con  (* (/ x 4) (* -3 0))
ECM: 0.038332500000000005 

4 : calculando con  (* (/ x x) (* x x))
(* (/ x x) (* x x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (* (/ x x) (* x x))
Nuevo valor: (* (+ x x) (- x x))
ECM: 0.038332500000000005 

5 : calculando con  (- (+ -5 5) (+ x x))
ECM: 1.5833325000000003 

6 : calculando con  (* (* x 3) (* x x))
ECM: 0.5564220000000001 

7 : calculando con  (* (- 2 2) (- 4 x))
ECM: 0.038332500000000005 

8 : calculando con  (* (/ -1 -5) (- x x))
ECM: 0.038332500000000005 

9 : calculando con  (/ (- -5 x) (* x -1))
(/ (- -5 x) (* x -1))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (/ (- -5 x) (* x -1))
Nuevo valor: (+ (+ -4 x) (/ -4 x))
(+ (+ -4 x) (/ -4 x))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (+ (+ -4 x) (/ -4 x))
Nuevo valor: (* (/ -2 -2) (/ x x))
(* (/ -2 -2) (/ x x))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (* (/ -2 -2) (/ x x))
Nuevo valor: (- (* -3 5) (- -1 x))
ECM: 187.51083250000002 

Se realizaron  4  modificaciones a la población.
Población:
 ['(- (+ -3 x) (* 1 x))', '(/ (* x x) (- x -4))', '(- (* x x) (* x -5))', '(* (/ x 4) (* -3 0))', '(* (/ x x) (* x x))', '(- (+ -5 5) (+ x x))', '(* (* x 3) (* x x))', '(* (- 2 2) (- 4 x))', '(* (/ -1 -5) (- x x))', '(/ (- -5 x) (* x -1))']
Fitness:
 [9.89333250e+00 1.29879841e-02 8.17583250e+00 3.83325000e-02
 3.83325000e-02 1.58333250e+00 5.56422000e-01 3.83325000e-02
 3.83325000e-02 1.87510833e+02]
Probabilidad: [0.10649602 0.11238692 0.10752004 0.11237181 0.11237181 0.11145064
 0.11206291 0.11237181 0.11237181 0.00059622]
Probabilidad acum: [0.10649602 0.21888294 0.32640298 0.43877479 0.5511466  0.66259724
 0.77466016 0.88703197 0.99940378 1.        ]

Número Aleatorio:  0.7654645135333128  entonces: Se cruza

Padre 1:  (- (+ -5 5) (+ x x))  --  Padre 2: (/ (* x x) (- x -4))
Hijo 1:  (- (+ -5 5) (- x -4))  --  Hijo 2: (/ (* x x) (+ x x))

Número Aleatorio:  0.4519511487270088  entonces: Se cruza

Padre 1:  (/ (* x x) (- x -4))  --  Padre 2: (- (* x x) (* x -5))
Hijo 1:  (/ (* x x) (* x -5))  --  Hijo 2: (- (* x x) (- x -4))

Número Aleatorio:  0.4545090213392431  entonces: Se cruza

Padre 1:  (* (* x 3) (* x x))  --  Padre 2: (* (/ x 4) (* -3 0))
Hijo 1:  (* (* x 3) (* -3 0))  --  Hijo 2: (* (/ x 4) (* x x))

Número Aleatorio:  0.44285526263737207  entonces: Se cruza

Padre 1:  (* (/ x x) (* x x))  --  Padre 2: (* (/ -1 -5) (- x x))
Hijo 1:  (* (/ x x) (- x x))  --  Hijo 2: (* (/ -1 -5) (* x x))

Número Aleatorio:  0.04511968566013691  entonces: Se cruza

Padre 1:  (- (+ -5 5) (+ x x))  --  Padre 2: (* (* x 3) (* x x))
Hijo 1:  (- (+ -5 5) (* x x))  --  Hijo 2: (* (* x 3) (+ x x))

Número Aleatorio:  0.4138810421840705  entonces: Se cruza

Padre 1:  (/ (* x x) (- x -4))  --  Padre 2: (* (- 2 2) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (* (- 2 2) (- x -4))

Fitness newPopulation  1  :
0 : calculando con  (- (+ -5 5) (- x -4))
ECM: 21.2658325 

1 : calculando con  (/ (* x x) (+ x x))
(/ (* x x) (+ x x))  evaluado da división por 0, generando nuevo valor de pos 1
Anterior: (/ (* x x) (+ x x))
Nuevo valor: (- (+ x 1) (- x x))
ECM: 1.7358325000000001 

2 : calculando con  (/ (* x x) (* x -5))
(/ (* x x) (* x -5))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (* x -5))
Nuevo valor: (* (- x 5) (* 2 -2))
ECM: 327.7083325 

3 : calculando con  (- (* x x) (- x -4))
ECM: 18.5808325 

4 : calculando con  (* (* x 3) (* -3 0))
ECM: 0.038332500000000005 

5 : calculando con  (* (/ x 4) (* x x))
ECM: 0.014241281249999998 

6 : calculando con  (* (/ x x) (- x x))
(* (/ x x) (- x x))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (* (/ x x) (- x x))
Nuevo valor: (* (* x 4) (/ x 3))
ECM: 0.10647916666666668 

7 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

8 : calculando con  (- (+ -5 5) (* x x))
ECM: 0.34499250000000004 

9 : calculando con  (* (* x 3) (+ x x))
ECM: 4.638232500000001 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

11 : calculando con  (* (- 2 2) (- x -4))
ECM: 0.038332500000000005 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- x -4))' '(* (/ -1 -5) (* x x))'
 '(* (/ x 4) (* x x))' '(* (- 2 2) (- x -4))' '(* (* x 3) (* -3 0))'
 '(* (- 2 2) (- 4 x))' '(* (/ -1 -5) (- x x))' '(* (/ x x) (* x x))'
 '(* (/ x 4) (* -3 0))']

GENERACION: 2
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

2 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

3 : calculando con  (* (/ x 4) (* x x))
ECM: 0.014241281249999998 

4 : calculando con  (* (- 2 2) (- x -4))
ECM: 0.038332500000000005 

5 : calculando con  (* (* x 3) (* -3 0))
ECM: 0.038332500000000005 

6 : calculando con  (* (- 2 2) (- 4 x))
ECM: 0.038332500000000005 

7 : calculando con  (* (/ -1 -5) (- x x))
ECM: 0.038332500000000005 

8 : calculando con  (* (/ x x) (* x x))
(* (/ x x) (* x x))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (* (/ x x) (* x x))
Nuevo valor: (- (* 1 x) (/ x x))
(- (* 1 x) (/ x x))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (- (* 1 x) (/ x x))
Nuevo valor: (+ (* 5 x) (- 2 -3))
ECM: 52.22583250000001 

9 : calculando con  (* (/ x 4) (* -3 0))
ECM: 0.038332500000000005 

Se realizaron  2  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- x -4))' '(* (/ -1 -5) (* x x))'
 '(* (/ x 4) (* x x))' '(* (- 2 2) (- x -4))' '(* (* x 3) (* -3 0))'
 '(* (- 2 2) (- 4 x))' '(* (/ -1 -5) (- x x))' '(* (/ x x) (* x x))'
 '(* (/ x 4) (* -3 0))']
Fitness:
 [5.45183348e-03 1.29879841e-02 1.37997000e-02 1.42412812e-02
 3.83325000e-02 3.83325000e-02 3.83325000e-02 3.83325000e-02
 5.22258325e+01 3.83325000e-02]
Probabilidad: [0.11092332 0.11090761 0.11090592 0.110905   0.11085479 0.11085479
 0.11085479 0.11085479 0.00208423 0.11085479]
Probabilidad acum: [0.11092332 0.22183093 0.33273684 0.44364184 0.55449663 0.66535142
 0.7762062  0.88706099 0.88914521 1.        ]

Número Aleatorio:  0.527162225814835  entonces: Se cruza

Padre 1:  (* (/ x 4) (* -3 0))  --  Padre 2: (* (- 2 2) (- x -4))
Hijo 1:  (* (/ x 4) (- x -4))  --  Hijo 2: (* (- 2 2) (* -3 0))

Número Aleatorio:  0.8842198558854358  entonces: Se Muta

Mutamos: (* (/ -1 -5) (* x x))
Mutaremos: /
Con: +
Mutado: (* (+ -1 -5) (* x x))

Número Aleatorio:  0.6284933325864126  entonces: Se cruza

Padre 1:  (/ (* x x) (- x -4))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- x -4))

Número Aleatorio:  0.341896001753067  entonces: Se cruza

Padre 1:  (* (/ x 4) (* -3 0))  --  Padre 2: (* (- 2 2) (- 4 x))
Hijo 1:  (* (/ x 4) (- 4 x))  --  Hijo 2: (* (- 2 2) (* -3 0))

Número Aleatorio:  0.7284179097953905  entonces: Se cruza

Padre 1:  (* (/ x 4) (* x x))  --  Padre 2: (* (- 2 2) (- x -4))
Hijo 1:  (* (/ x 4) (- x -4))  --  Hijo 2: (* (- 2 2) (* x x))

Número Aleatorio:  0.27232196233922634  entonces: Se cruza

Padre 1:  (* (/ x 4) (* x x))  --  Padre 2: (* (/ -1 -5) (- x x))
Hijo 1:  (* (/ x 4) (- x x))  --  Hijo 2: (* (/ -1 -5) (* x x))

Fitness newPopulation  2  :
0 : calculando con  (* (/ x 4) (- x -4))
ECM: 0.19333312499999997 

1 : calculando con  (* (- 2 2) (* -3 0))
ECM: 0.038332500000000005 

2 : calculando con  (* (+ -1 -5) (* x x))
ECM: 6.478192500000001 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

5 : calculando con  (* (/ x 4) (- 4 x))
ECM: 0.06749812499999999 

6 : calculando con  (* (- 2 2) (* -3 0))
ECM: 0.038332500000000005 

7 : calculando con  (* (/ x 4) (- x -4))
ECM: 0.19333312499999997 

8 : calculando con  (* (- 2 2) (* x x))
ECM: 0.038332500000000005 

9 : calculando con  (* (/ x 4) (- x x))
ECM: 0.038332500000000005 

10 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- x -4))'
 '(/ (* x x) (- x -4))' '(* (/ -1 -5) (* x x))' '(* (/ -1 -5) (* x x))'
 '(* (/ x 4) (* x x))' '(* (* x 3) (* -3 0))' '(* (- 2 2) (- 4 x))'
 '(* (/ -1 -5) (- x x))']

GENERACION: 3
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

3 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

4 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

5 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

6 : calculando con  (* (/ x 4) (* x x))
ECM: 0.014241281249999998 

7 : calculando con  (* (* x 3) (* -3 0))
ECM: 0.038332500000000005 

8 : calculando con  (* (- 2 2) (- 4 x))
ECM: 0.038332500000000005 

9 : calculando con  (* (/ -1 -5) (- x x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- x -4))'
 '(/ (* x x) (- x -4))' '(* (/ -1 -5) (* x x))' '(* (/ -1 -5) (* x x))'
 '(* (/ x 4) (* x x))' '(* (* x 3) (* -3 0))' '(* (- 2 2) (- 4 x))'
 '(* (/ -1 -5) (- x x))']
Fitness:
 [0.00545183 0.00545183 0.01298798 0.01298798 0.0137997  0.0137997
 0.01424128 0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10136609 0.10136609 0.1006265  0.1006265  0.10054684 0.10054684
 0.1005035  0.09813921 0.09813921 0.09813921]
Probabilidad acum: [0.10136609 0.20273219 0.30335869 0.40398519 0.50453203 0.60507887
 0.70558237 0.80372158 0.90186079 1.        ]

Número Aleatorio:  0.26194063160749614  entonces: Se cruza

Padre 1:  (* (- 2 2) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (* (- 2 2) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.22002968954243274  entonces: Se cruza

Padre 1:  (/ (* x x) (- x -4))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- x -4))

Número Aleatorio:  0.30233772799535885  entonces: Se cruza

Padre 1:  (* (/ x 4) (* x x))  --  Padre 2: (* (* x 3) (* -3 0))
Hijo 1:  (* (/ x 4) (* -3 0))  --  Hijo 2: (* (* x 3) (* x x))

Número Aleatorio:  0.45622937824560716  entonces: Se cruza

Padre 1:  (* (/ -1 -5) (- x x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (* (/ -1 -5) (- 4 x))  --  Hijo 2: (/ (* x x) (- x x))

Número Aleatorio:  0.5996628737609595  entonces: Se cruza

Padre 1:  (* (/ -1 -5) (- x x))  --  Padre 2: (* (/ x 4) (* x x))
Hijo 1:  (* (/ -1 -5) (* x x))  --  Hijo 2: (* (/ x 4) (- x x))

Número Aleatorio:  0.36249269281228613  entonces: Se cruza

Padre 1:  (* (* x 3) (* -3 0))  --  Padre 2: (/ (* x x) (- x -4))
Hijo 1:  (* (* x 3) (- x -4))  --  Hijo 2: (/ (* x x) (* -3 0))

Fitness newPopulation  3  :
0 : calculando con  (* (- 2 2) (- 4 x))
ECM: 0.038332500000000005 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

4 : calculando con  (* (/ x 4) (* -3 0))
ECM: 0.038332500000000005 

5 : calculando con  (* (* x 3) (* x x))
ECM: 0.5564220000000001 

6 : calculando con  (* (/ -1 -5) (- 4 x))
ECM: 0.35823250000000006 

7 : calculando con  (/ (* x x) (- x x))
(/ (* x x) (- x x))  evaluado da división por 0, generando nuevo valor de pos 7
Anterior: (/ (* x x) (- x x))
Nuevo valor: (- (* x -2) (- x x))
ECM: 1.5833325000000003 

8 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

9 : calculando con  (* (/ x 4) (- x x))
ECM: 0.038332500000000005 

10 : calculando con  (* (* x 3) (- x -4))
ECM: 54.14831250000001 

11 : calculando con  (/ (* x x) (* -3 0))
(/ (* x x) (* -3 0))  evaluado da división por 0, generando nuevo valor de pos 11
Anterior: (/ (* x x) (* -3 0))
Nuevo valor: (- (* x 4) (* -4 x))
ECM: 16.658332499999997 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- x -4))' '(/ (* x x) (- x -4))'
 '(/ (* x x) (- x -4))' '(* (/ -1 -5) (* x x))' '(* (/ -1 -5) (* x x))'
 '(* (/ -1 -5) (* x x))']

GENERACION: 4
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

5 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

6 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

7 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

8 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

9 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- x -4))' '(/ (* x x) (- x -4))'
 '(/ (* x x) (- x -4))' '(* (/ -1 -5) (* x x))' '(* (/ -1 -5) (* x x))'
 '(* (/ -1 -5) (* x x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.01298798 0.01298798
 0.01298798 0.0137997  0.0137997  0.0137997 ]
Probabilidad: [0.10047482 0.10047482 0.10047482 0.10047482 0.09972389 0.09972389
 0.09972389 0.09964301 0.09964301 0.09964301]
Probabilidad acum: [0.10047482 0.20094964 0.30142446 0.40189928 0.50162317 0.60134707
 0.70107096 0.80071397 0.90035699 1.        ]

Número Aleatorio:  0.9428203832894265  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8950558251400144  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6133369028196963  entonces: Se cruza

Padre 1:  (/ (* x x) (- x -4))  --  Padre 2: (/ (* x x) (- x -4))
Hijo 1:  (/ (* x x) (- x -4))  --  Hijo 2: (/ (* x x) (- x -4))

Número Aleatorio:  0.03236959235186265  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8380370126461564  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.16393065058112655  entonces: Se cruza

Padre 1:  (* (/ -1 -5) (* x x))  --  Padre 2: (* (/ -1 -5) (* x x))
Hijo 1:  (* (/ -1 -5) (* x x))  --  Hijo 2: (* (/ -1 -5) (* x x))

Número Aleatorio:  0.75418039637423  entonces: Se cruza

Padre 1:  (/ (* x x) (- x -4))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- x -4))

Fitness newPopulation  4  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

3 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

8 : calculando con  (* (/ -1 -5) (* x x))
ECM: 0.013799700000000002 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- x -4))
ECM: 0.012987984119265644 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 5
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8551309902463524  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.43541855495493476  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.27032906553700553  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.07743772661523196  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8186512560645754  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.1843307007961399  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6515993522923489  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  5  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

11 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 6
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.896539743112735  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.04508335996361068  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.04942492670597887  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8653758658710996  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: -
Con: *
Mutado: (/ (* x x) (* 4 x))

Número Aleatorio:  0.15972791276812237  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4484959690222188  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8758123937939082  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Fitness newPopulation  6  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (* 4 x))
(/ (* x x) (* 4 x))  evaluado da división por 0, generando nuevo valor de pos 5
Anterior: (/ (* x x) (* 4 x))
Nuevo valor: (* (- 3 1) (+ x 5))
ECM: 115.92333249999999 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 7
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15541117901405999  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.03597951690668588  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.7624221209301028  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.3889635436602694  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6603896908414929  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.5234429254785669  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  7  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

11 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 8
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7233196931313532  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8701659483606856  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.20827629697540728  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6293103410332629  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6802174465629944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.36425919870041734  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  8  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 9
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8155443032566708  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.38786390183745223  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4589119405480484  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.847471466363291  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.7389190090688437  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.9621699700883852  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 4 x))

Número Aleatorio:  0.5610448428639455  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  9  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 10
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7451102083088395  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.3485093865291896  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4271118778621077  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4822765967023278  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.19701947150450716  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.40491559863179283  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  10  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

11 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 11
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6459546806721793  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6676234624253775  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.14735846780187056  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.3759850530737039  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.18998347836246676  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.9307952413976714  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 4 x))

Fitness newPopulation  11  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 12
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.10359958213856446  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.38410907680436923  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.9200438620596745  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4975255121610024  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.12889483147402758  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6459598356508287  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  12  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 13
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.80477200238629  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 4 x))

Número Aleatorio:  0.9615775960287711  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6919676309286255  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4389715645707829  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.7956255023491288  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8444026566279712  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 4 x))

Número Aleatorio:  0.27788913523464465  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  13  :
0 : calculando con  (/ (* x x) (/ 4 x))
(/ (* x x) (/ 4 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ 4 x))
Nuevo valor: (+ (* 2 1) (+ x 1))
ECM: 10.965832500000001 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (+ 4 x))
ECM: 0.012987984119265644 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 14
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00545183 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7940599576162527  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.6014690942942048  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.7626621123158244  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8827421537301289  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: 4
Con: 3
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.65686321893801  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.1655444892703255  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  14  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 15
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00042764 0.00545183 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.10045195 0.09994978 0.09994978 0.09994978 0.09994978 0.09994978
 0.09994978 0.09994978 0.09994978 0.09994978]
Probabilidad acum: [0.10045195 0.20040173 0.30035152 0.4003013  0.50025108 0.60020087
 0.70015065 0.80010043 0.90005022 1.        ]

Número Aleatorio:  0.34463232677637046  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.7746016996753158  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.597171951051476  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.12996647557460095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.3059962839101267  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5497598854323728  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  15  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

11 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 16
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00042764 0.00042764 0.00545183 0.00545183 0.00545183 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.10040153 0.10040153 0.09989962 0.09989962 0.09989962 0.09989962
 0.09989962 0.09989962 0.09989962 0.09989962]
Probabilidad acum: [0.10040153 0.20080306 0.30070268 0.4006023  0.50050191 0.60040153
 0.70030115 0.80020077 0.90010038 1.        ]

Número Aleatorio:  0.8081061312741251  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0017555496571864948  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.32674886005497306  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7002786266831073  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Número Aleatorio:  0.9679790982572796  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8443772729975823  entonces: Se Muta

Mutamos: (/ (* x x) (- 4 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 4 x))

Número Aleatorio:  0.6506854651998789  entonces: Se cruza

Padre 1:  (/ (* x x) (- 4 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 4 x))

Fitness newPopulation  16  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (* (* x x) (- 4 x))
ECM: 1.130358 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']

GENERACION: 17
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

6 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))' '(/ (* x x) (- 4 x))'
 '(/ (* x x) (- 4 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00545183
 0.00545183 0.00545183 0.00545183 0.00545183]
Probabilidad: [0.10025058 0.10025058 0.10025058 0.10025058 0.10025058 0.09974942
 0.09974942 0.09974942 0.09974942 0.09974942]
Probabilidad acum: [0.10025058 0.20050116 0.30075174 0.40100232 0.5012529  0.60100232
 0.70075174 0.80050116 0.90025058 1.        ]

Número Aleatorio:  0.02852980026448315  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18853031479458848  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.027231039477195185  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7287325482251948  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5861138406789208  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7041824669308611  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 4 x))
Hijo 1:  (/ (* x x) (- 4 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  17  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 18
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6750889259710589  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07839673740112885  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9362759085504296  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0907424213567769  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3667110391825582  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6772644751980814  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  18  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 19
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.05196720227713203  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9758969068860327  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24918285395882267  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39786396860140727  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9181491379066932  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.406626722806109  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44370426101695004  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  19  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 20
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.29863186015243937  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.045136543374646454  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18240477975806046  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7735949237302834  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7300001542708517  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3703305715561419  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  20  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 21
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.31450350149996  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4585698703818294  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5730803661842607  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4224795214576179  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7468621934714943  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5531102527526404  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  21  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 22
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.29999911564270443  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7844676531548175  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.772212809082045  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6937918260345425  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7300196331691404  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3462183605995508  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  22  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 23
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9720707753581371  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8905546325087934  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1618663227940349  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7365591355244668  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.025282156415820545  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6308991042809702  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1815259319420156  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  23  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 24
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8959327698891488  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5445949399708744  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3438946432732608  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9965863705326496  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3257094943037505  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.004708511755423084  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8943183135188185  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Fitness newPopulation  24  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 25
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7013976141805671  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9291517778507451  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.29317251194870053  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5098526728345384  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2923941026605251  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14603890622322202  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  25  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 26
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6864823653509959  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1906422918989431  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.044390853146873965  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5072348826764311  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5533158041520062  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0625112362565734  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  26  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 27
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.965683037492794  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7454087720250373  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08918996989718331  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9790738960022273  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7358540405617804  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0962484399723128  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.719375401867185  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  27  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 28
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4481007817938575  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4371049023195773  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45195668428355684  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3758923415190023  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.482557462002985  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6878371789305072  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  28  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 29
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.053937827021203866  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09978867147734272  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05741302205655463  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9883248103683487  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9266367263408618  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.368447782942516  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18200906811206352  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  29  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 30
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9924028048608912  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8668646379036148  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7687443100136876  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7408288841203812  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46089278976991244  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27643659815331745  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5985607257303304  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  30  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 31
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3235735990391678  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7817904225060169  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9432126117550821  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5584479815437589  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1837198296541792  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06427523493707898  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  31  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 32
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2712276863236557  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6900820538600396  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.43598856098683336  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5873435348827022  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3373908209400055  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.43246306370535903  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  32  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 33
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.21923298105821487  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25314152842307847  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6950751989679299  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02745056692728909  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39386293052487087  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05736564369890795  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  33  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 34
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4923455640824881  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5948207094590244  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8172575068500105  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9368112566018411  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04140146740856454  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.43595984101734286  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9485081062456278  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  34  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 35
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9851932050763037  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36037310383403753  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8641649512770236  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5623642479233704  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6001919295192651  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8980777309500642  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11715700375370552  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  35  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 36
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.31491909644542737  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.873512535850811  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1011609022502562  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6880359494943138  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28165888069769973  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09924542257468572  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  36  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 37
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3876214859630067  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.484329201358098  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2984484994070459  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7954499298297348  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6920447280366218  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3907479349192021  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  37  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 38
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5368913483019648  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5074944779980738  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6331541416831463  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9095102340181779  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9817000339358994  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.29412611709770986  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8229067003655158  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  38  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 39
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8043867555346342  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4417658366555961  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.50995929433326  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5938899934412162  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7857789745433911  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19456404307869168  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  39  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 40
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.07681568979242248  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6981366056293451  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6746684706996945  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0033338416279649064  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9930256828388633  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12266735930841477  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  40  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 41
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2298197808418977  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.771534933018057  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7100454306231654  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11546345459551366  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44703546063841715  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.29424374253288466  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  41  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 42
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6987351097798802  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9779859626697802  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11325090097284918  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.21153462535629697  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1360599304827773  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7234862404178035  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  42  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 43
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8395572237525988  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.6497716698337568  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.13299908739069044  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11545154207235397  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8114150309469484  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35979414051257685  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9392870400752082  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  43  :
0 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 44
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5821402924006607  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.796195872344453  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5561940162144471  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.828576692145774  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8439772606879046  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03875112399409186  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4219607413101454  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  44  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 45
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.29471298248347877  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9590554704523915  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4967210111969732  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.814267688912198  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.23684099574430906  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7827698590953609  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7665301675242995  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  45  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 46
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2270368219977621  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9411272181776932  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9330117986530125  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07508100768736803  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6780164073838726  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40532755208762705  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03876551315829779  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  46  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 47
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.28951277874515136  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9066914104540941  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.852544388828778  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8687435099264936  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 5
Mutado: (/ (* x x) (- 5 x))

Número Aleatorio:  0.10322646310566419  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7537027827213139  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7841237671171616  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  47  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 5 x))
ECM: 0.010562024031684773 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 48
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.623428822401748  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9780397917494738  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24070419713100233  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3691830823797625  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9540540600132423  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7209448185069373  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5268734682941687  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  48  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 49
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.513751540051598  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7212436657731365  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.961058161509779  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.81348080219108  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6407142128862996  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5973456963823307  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.49237752915800537  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  49  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 50
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9520568580701586  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16788357384390762  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.642457726825861  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3972258092025621  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8987808320619532  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -2
Mutado: (/ (* x x) (- -2 x))

Número Aleatorio:  0.7929810535219867  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.43025665917912936  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  50  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- -2 x))
ECM: 0.1133282653000949 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 51
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3178138126217289  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1820063611107643  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8800717994396006  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6229700187384419  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5585038819732417  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2721189023560656  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  51  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 52
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2866454563762345  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27274860614314256  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6615193670768961  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0644367384066572  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46682095142609326  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6015520648826791  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  52  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 53
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.25095118221125867  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7779063285592579  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3507495053728129  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12825160894043985  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3303003211051896  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07729654016520993  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  53  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 54
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.20938529500296776  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1662000688998252  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16479435793181663  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3420863002982666  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36111092970276903  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5336672162516523  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  54  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 55
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5343693267871552  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7635716788709023  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9483576406781519  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4127333615198663  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3732328656545194  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36620640011872396  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  55  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 56
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3934484069024291  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2873241709290515  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7007990007942758  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8139423609619248  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.15660011218728564  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.669600940252638  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  56  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 57
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15972084394255748  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.169723316304073  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1742679414373136  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6198751787424341  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10353434283864904  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4796295738379682  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  57  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 58
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8207186053509483  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.83565949693884  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0921133701117578  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2134230759130077  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.31688538598804916  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6785780965832011  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5282539563485452  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  58  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 59
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18854002418400784  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5302994136008476  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36517176993784906  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46861856812975455  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36539732927484936  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8615501280058273  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Fitness newPopulation  59  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 60
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3567560342576913  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4167344742860447  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5535627038653675  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10968791477024531  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22316543602030836  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8886146645117549  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: -
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  60  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 61
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6577940851969034  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7936678200361705  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3186542405433287  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4193783730462639  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2949069789767428  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8502852244396168  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  61  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 62
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15117377188201442  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47206591982660295  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22554333824895245  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.938097500530704  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3618995984409473  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8521528295463807  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5043304216578158  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  62  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 63
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7649456283837858  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6962584874988649  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18414904503957163  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6891897081372932  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9588816569127065  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3168757592185314  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  63  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 64
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8175278207188494  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.30704773217785464  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5034212127516542  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6492877252801187  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18837148544311788  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9976455867282398  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8097097874174515  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  64  :
0 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 65
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9422844047588471  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4564605159309736  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8158274122419984  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.17521982994465002  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7414579475858489  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8989687299109728  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6663332476125707  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  65  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 66
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5327475983689814  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2883619787136651  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41283086137931246  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35097363500376044  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6104473285448526  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7424306721247378  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  66  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 67
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5720058423731718  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8713451977288595  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.7885372256230402  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7543927410758209  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4733479493232786  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6358626233127228  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  67  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 68
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.21593892066925535  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.962556339697746  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7744722572636086  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41766191530136343  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9873354716974923  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09939509357569987  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8917361301221706  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Fitness newPopulation  68  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 69
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.007248331947886766  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.038706968139821885  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.702046494839584  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9342752078740629  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22764029080924353  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.49020564345301787  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  69  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 70
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5206362163790177  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8477226078681304  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6460135373154133  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7700574186328245  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8184844544502885  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.7929961493955024  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3784101747476839  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  70  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 71
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.34143843574907007  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.504091384203853  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4249421139728733  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9208589035353679  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9147663489856991  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3659396614022633  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0882861782861768  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  71  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 72
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8182721621533362  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.18132146898498247  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1605623006572372  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0709203711447497  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3159677145209625  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3536826553811955  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  72  :
0 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (- (- x x) (/ 0 -5))
ECM: 0.038332500000000005 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 73
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15852469713339512  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7781800430052217  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9921731553598689  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03774332896081023  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14895770826133592  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8588837584068133  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9941159346625372  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  73  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 74
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5467263739642759  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2409537095634181  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18100974030626948  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5184296993235076  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5735096435016978  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3560144717874244  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  74  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 75
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.21899707542756752  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6578579475628111  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5576590218164191  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17353652351375093  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.400621368314499  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.020345560723552314  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  75  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 76
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6845317616108866  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6435138741540781  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6766928623166816  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08105457798671489  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1531486721920018  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.01941781673803822  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  76  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 77
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5786504904020912  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24188283187019588  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8532271545161633  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -4
Mutado: (/ (* x x) (- -4 x))

Número Aleatorio:  0.5734493086843286  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19905748963342595  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1538021058210718  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  77  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- -4 x))
ECM: 0.07708527336039002 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 78
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3402748240455242  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.899113766769711  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7632578197831554  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6630991972139121  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9263109874121672  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11199264768266137  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9095047365094293  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  78  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 79
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5565443696949559  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7854072760074261  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.762184217047408  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6091555997389633  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7278150295404959  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7794868915841641  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  79  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 80
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5056217126196514  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.062169995463911554  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5420960056608579  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.901819308224437  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6214723743616076  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4394481788019873  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  80  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 81
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3636721804201314  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.37455208250998895  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2472818830940271  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.652041178774839  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7344925056440602  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9589509546288782  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  81  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 82
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2718545430376267  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4566828160618105  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.038086503966027196  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.43726056826353743  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6330323815558558  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06200735738974028  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  82  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 83
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8689677294849842  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6621021396447996  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5605034306759004  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6485882832643258  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06129278052554821  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19556002949014473  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  83  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 84
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2888192878799387  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9993929511333561  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39562680783130977  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02261218080588534  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4634347730614031  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9056188397753537  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12762406978719332  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  84  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 85
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8907251507136905  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.819875765905594  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.7430605106872634  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9109127432286958  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7368659566722446  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8826271091180136  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 4
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.4812408826090693  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8557033702779714  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Fitness newPopulation  85  :
0 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

1 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 86
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3640620430505469  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33088977685541143  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7406979305837005  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5305956924847944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.85733302575282  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.8119136202662836  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: *
Mutado: (/ (* x x) (* 3 x))

Número Aleatorio:  0.30936597190105675  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  86  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

9 : calculando con  (/ (* x x) (* 3 x))
(/ (* x x) (* 3 x))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (/ (* x x) (* 3 x))
Nuevo valor: (* (+ x x) (* x x))
ECM: 0.18804450000000003 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 87
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7798511563741709  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9177157903344514  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08543685902073594  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.005730304451244894  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4031734262085511  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9353261901605093  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.551459608945774  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  87  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 88
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7263899114297591  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5606933786073526  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7320549207449095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17481401867572344  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5676378088916433  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8237330664689448  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  88  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 89
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4351766275830897  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8290660321362602  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8885943599774129  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.9084414424823267  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7092905448862992  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40729841082683316  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05774844321578576  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  89  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 90
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.17850542468398312  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44435906193740504  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9709459354375162  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6765267049023916  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44042254227482225  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1413599276088484  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  90  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 91
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1408200656422427  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6649694433535399  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6594464904033509  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14742503571958676  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3610294369347449  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06369809589528597  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  91  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 92
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9376799110923324  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8454749590060879  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.9409740640329446  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4484062578540986  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4316599885635759  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9331988278673632  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3544241643655043  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5607462164243191  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  92  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 93
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8701141496809924  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.09043794072005307  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4739661839018253  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8136019289838298  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.5997778269795749  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3871912354730347  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4773482873454723  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  93  :
0 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 94
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5182529879428719  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7292615564459134  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9814768443821962  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9326116747309957  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8201465901429484  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: *
Mutado: (/ (* x x) (* 3 x))

Número Aleatorio:  0.3125773124422436  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40905017875355265  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  94  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (* 3 x))
(/ (* x x) (* 3 x))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (* x x) (* 3 x))
Nuevo valor: (* (/ x 0) (+ -2 4))
(* (/ x 0) (+ -2 4))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (* (/ x 0) (+ -2 4))
Nuevo valor: (+ (+ x x) (+ x x))
ECM: 3.7883325 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 95
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3356662041976587  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.48014820400747404  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19444264666044608  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.600785819383579  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08706516193560776  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5114192578018762  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  95  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 96
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.453621126738477  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9296975619804669  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1685787226231923  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9637722803948003  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1402448835895581  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4821405182086269  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.579752037009171  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  96  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 97
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.91161247023466  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.704288371486839  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.010762714054463163  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.965346301024979  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3789968977686675  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8914954718857723  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.4420737008693564  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  97  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 98
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.19869754223863012  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8812594105213184  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 3 x))

Número Aleatorio:  0.2044468615750783  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07301867053956546  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7909078372894363  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4060078084882677  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  98  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (/ 3 x))
(/ (* x x) (/ 3 x))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (/ 3 x))
Nuevo valor: (* (* x x) (* 3 4))
ECM: 20.2778925 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 99
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.11359108385667427  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04479634699895674  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6677530700083589  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8741780383186614  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.1473482624044241  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5101692014850654  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  99  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 100
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7769793567022957  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27086430355730806  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24111552817864357  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44173078879455974  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3146869689527998  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3926013769978669  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  100  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 101
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7142808984740874  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9626075608311816  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.34896276637338997  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8353831986791919  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.4050642623304883  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.762685218863249  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3972667537808652  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  101  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 102
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.291596251118153  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.692215068086663  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9200312354800619  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7776464925259582  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1835241409935232  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8565273555005634  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.3409818335526117  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  102  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 103
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.721248867167444  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9498236841099624  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5248142840011194  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3098721141926061  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5659456064547312  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5291172426444358  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  103  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 104
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4073764917223117  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10309419950823828  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9170869284376054  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3870463647865243  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46282137639069865  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.683174529986409  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  104  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 105
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4394534099633085  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6346315095131468  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5484544525125901  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.251466263488491  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3624953289626234  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.37748104786501546  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  105  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 106
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4738069638367207  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.186948847783725  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7904365188180031  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8919103393454972  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4163300207901941  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39119692051340427  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  106  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 107
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8849106029620841  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7592668420326798  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7623030419003572  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41831809708139767  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.007220464079291  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8286998073671192  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8393555383387593  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Fitness newPopulation  107  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 108
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4398922131019376  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02006125307062423  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.002877683772637196  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40128595083482965  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7168097654649245  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9960475717500722  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  108  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 109
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4380209944878427  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7685142945690684  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2307888854929182  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39609699981105906  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22056512756928148  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8394635001341179  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Fitness newPopulation  109  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 110
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.13292567902808083  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44183939633005176  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6909519180809711  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03154158819444319  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7783410779733685  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.303440587670074  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  110  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 111
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6581188672880597  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19645687995310712  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.15499835483089508  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5809580061273952  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6767294893188129  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8614184547834102  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Fitness newPopulation  111  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 112
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.04571153343185952  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04238071678021371  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7862868278328778  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39740859122898153  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.32298333035138715  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6043265686015057  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  112  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 113
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.43373735994665097  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5046205693499324  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47559466554375485  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.372796731839278  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8977508925732943  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9759585054144813  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6309157718904707  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  113  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 114
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5016097228591188  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7637819526043554  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5335790228490911  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41409586764308604  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2555485794042177  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9888963027954403  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  114  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 115
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.19748965774821758  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5865139492212339  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4617768506097262  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.951006245821157  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02250688966703429  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8076078546044068  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.40635854876920374  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  115  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 116
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.20108108516915102  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2680273762696721  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8931629810434666  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09079599735818134  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9300864237289002  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08587725121456113  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9861611010959976  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  116  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 117
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7472977179423806  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03939847458133616  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7663826455508046  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7659690722468404  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2052585626091652  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08442849011267461  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  117  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 118
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.060724556999642854  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47058846419797384  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.047758895909662424  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19530273539628384  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4080751808780456  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.021764904861791834  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  118  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 119
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3208002148346122  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9327979590014591  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25426390536005816  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.94537293835542  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2168320918311878  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6226461154180787  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4621378457568778  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  119  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 120
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.44919103322703435  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7281674025649608  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5579993755912943  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22998247697166796  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7069674457054631  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5773782831255729  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  120  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 121
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6324610980518087  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6293556746393437  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7485421722366981  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6349328616888406  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45908912701768056  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5487785036563139  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  121  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 122
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7612484190793188  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8005537259833806  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.36039464109156627  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6254451916685029  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5123478573602941  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25144269894881577  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  122  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 123
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8022408796847131  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.2901697476047169  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9347890006050643  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20800843710220784  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4106704256817554  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7641869120471837  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2539245862424869  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  123  :
0 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 124
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.886671697237195  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.6341415365825381  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7791166347224971  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9954400922896236  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9167544727015478  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9579266500630715  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7200243299211215  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5779722000830023  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  124  :
0 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 125
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2385716984900198  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7008741845982847  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9394344986522905  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.875525464400212  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -3
Mutado: (/ (* x x) (- -3 x))

Número Aleatorio:  0.560595322038414  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9107252301165086  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7766099737225073  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  125  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- -3 x))
ECM: 0.08958776189202929 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 126
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4234662931954042  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.49835603042321064  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09899624035368737  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0886369660919114  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.21738459220604756  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6904591585472213  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  126  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 127
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8800979673808225  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9373140168163504  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.768240848649281  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28217450971639246  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4841948542251304  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47703999940598873  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.34870098284123585  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  127  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 128
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.06996108111990584  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9810664079165993  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.38797704855588255  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2744065174735698  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47596895909702164  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24407341513239966  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  128  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 129
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8455613350864764  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: -
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.015274544700476178  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8530995933359259  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12217192755456485  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33565204870356435  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28069823477196554  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8230924428207889  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Fitness newPopulation  129  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 130
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6493511612241599  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22915634872421475  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.26623167028436745  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08734228195642169  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5085777190090924  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7339274530238277  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  130  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 131
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7376280078226529  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9629287351212218  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45042352284535003  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2712360299427863  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05938301144016267  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12380747659281643  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  131  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 132
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.21357578230334773  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09018683413480488  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.01020173109530842  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6845489868867051  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36607707358472064  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40954008000630737  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  132  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 133
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9878068893098411  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3228885052830095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7095389252288915  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.30096335805830043  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6786704705702747  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3590192195303298  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  133  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 134
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8325806778928909  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5313236301796104  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.21572298205020912  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7206166940129478  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7020129294957028  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7504864980709152  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  134  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 135
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.46096812672070386  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06207886611762947  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41396586642610733  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.031142023529616703  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.047682259132453386  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8040795670764476  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -2
Mutado: (/ (* x x) (- -2 x))

Fitness newPopulation  135  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- -2 x))
ECM: 0.1133282653000949 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 136
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4745278886310137  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6752560311898291  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6470505056272361  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0707619222148892  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.420122368924312  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2945575848342499  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  136  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 137
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1720613591736857  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3348650196264019  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8031917330973162  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04437105207497216  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8224264300482599  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.3902430188100485  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.762322702968239  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  137  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 138
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.20397190857904146  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6035245689120746  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19442514151489776  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05529244080876616  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5276551667002501  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03941454165248104  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  138  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 139
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3997434408692464  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3093072470608529  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27277189579566563  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7650503936208445  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8071179754394858  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6603746039380369  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  139  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 140
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9051382344433544  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4325222622030671  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.963173370762545  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5343151693466253  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4305219695026029  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4825380773658734  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.430520050143112  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  140  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 141
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9610779013030356  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24610038418537783  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0532380874226972  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28761981567951944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2666140851348606  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6153395689975404  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  141  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 142
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4380892886181814  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16958627413067184  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06614375270477357  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8799144586190163  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19688862879350066  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7930687303359036  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  142  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 143
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8388554586248917  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -5
Mutado: (/ (* x x) (- -5 x))

Número Aleatorio:  0.7039558573449087  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.963776316493293  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1703456591122886  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6529750415958279  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07673375766760782  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40040213554633486  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  143  :
0 : calculando con  (/ (* x x) (- -5 x))
ECM: 0.06942167609162175 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 144
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7457463669951132  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6336206394497943  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8110301189716419  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 3 x))

Número Aleatorio:  0.4199427255439083  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9602010587856316  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.01765188506704851  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5701038310757401  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  144  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (/ 3 x))
(/ (* x x) (/ 3 x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (* x x) (/ 3 x))
Nuevo valor: (* (+ x -1) (* x x))
ECM: 0.080358 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 145
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4782193534627599  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.997340817401903  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22506199961433548  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4578114717185563  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6248289548450393  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5631388143543131  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  145  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 146
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5158334103936086  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9583937145512376  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9384375908473283  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7352406697866528  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4314275205531498  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7940369464700272  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6154149039644238  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  146  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 147
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9567408867238014  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6049321954702892  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41888065860690815  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.657669576776384  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08148131584367913  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6543504049819661  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  147  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 148
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9368445463630471  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8450492245108503  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: -
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8894201742422885  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: *
Mutado: (/ (* x x) (* 3 x))

Número Aleatorio:  0.985865334414837  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4991545728162097  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3248972244365115  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4127748706083738  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.887768861795087  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Fitness newPopulation  148  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (* 3 x))
(/ (* x x) (* 3 x))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (* 3 x))
Nuevo valor: (+ (* x x) (+ 2 x))
ECM: 6.8958325 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 149
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3956621655503595  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9887868469615078  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1984145957311343  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7362930636406896  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09402246551352367  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5442049006843793  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  149  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 150
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.729010299234885  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11329037304291034  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4856609990714138  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5952510835515716  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9955425194199711  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33885143920847116  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  150  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 151
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3958812094909253  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14688019341541103  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4166646600833249  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08431511350119603  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12198268275808788  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6738283866893231  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  151  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 152
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.27351685584376473  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.43639525257341316  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10606077546919668  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17726153976179015  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8310269138213658  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6873718606371874  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  152  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 153
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.09539492258518978  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5331095964250065  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5642370618016761  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20912564893462648  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1379793732512492  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7067509280873395  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  153  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 154
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5690301044363226  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.965895763373946  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25010427562880533  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5142755403360644  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.879842627673244  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.948783083825877  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4839904721453344  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  154  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 155
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6315168223858082  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8943484138069853  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.26926012159109314  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.029238373604160595  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.023462225227548594  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.201601342497853  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  155  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 156
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.0728890033692029  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4736180894832209  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8786323083916816  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7429659884968294  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.44603398451202814  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08558426097465399  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  156  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 157
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7066417678332215  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17478940974327806  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28497628226861405  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8279186060244267  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.8925985335319441  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7722801082117363  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8857563072015319  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Fitness newPopulation  157  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 158
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9744669740132359  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8726926244506614  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.8649616118064548  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.819165241585388  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.563891457517743  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.41310377095836126  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06273179080755387  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3500486756181588  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  158  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 159
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7555330101811452  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2660613994061416  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2967735431243027  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9869021863878896  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28797936555241455  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35905471064210936  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  159  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 160
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7629122933363773  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7840346837868489  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.23152605477746946  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04567645512066365  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18641460701142087  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8847364635352795  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  160  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 161
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8670483086058811  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 4
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.8047662406485931  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.7666539299824073  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5099563648575751  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.30260264625422884  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5193613011912426  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.49181951359734155  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  161  :
0 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

1 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 162
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18483442672052386  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3944110024351557  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8698084979857099  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.9391383804452303  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7671122568082076  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5329092357750728  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.26696130774269944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  162  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 163
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1531456645935354  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16962304997712696  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20491513542128081  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7649218555047969  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.299888040259049  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4922217149888356  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  163  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 164
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9797524157221074  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9618445808988098  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1528530487767824  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.598999930955133  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36818090024927774  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03857874283060336  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5573102735462963  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  164  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 165
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18370308607178742  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2860508511306671  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.334225017419435  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8138970103545436  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 0
Mutado: (/ (* x x) (- 0 x))

Número Aleatorio:  0.5149825106495083  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.671538178659614  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  165  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 0 x))
(/ (* x x) (- 0 x))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (* x x) (- 0 x))
Nuevo valor: (- (+ -1 x) (* -3 3))
ECM: 69.0408325 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 166
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.39824158320770153  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7903321263542339  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5922743218896784  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10076488977091413  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5889989830702266  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9472037978634206  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  166  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 167
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.24012609944417074  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.970465911184409  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5796676590123561  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3989671586979108  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9930899572877132  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7012678167022341  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.949329762675685  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  167  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 168
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6648075083245901  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3994166287371469  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24482269652014732  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6595969075822707  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8814733431460311  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.805756365149086  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.5590787512178932  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  168  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

9 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (/ (+ x -1) (+ -3 -5))
ECM: 0.034035625 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 169
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.12232371972731426  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3204182300574723  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3067122197836446  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.29275676625393665  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8168957163344827  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9776908828051785  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16082399246321166  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  169  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 170
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.890953085727971  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -1
Mutado: (/ (* x x) (- -1 x))

Número Aleatorio:  0.41686895769353427  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.32011494997397016  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4688725630524817  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3278353573049966  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3600828284983474  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  170  :
0 : calculando con  (/ (* x x) (- -1 x))
ECM: 0.17347341793854246 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 171
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1955583250527646  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8797222227951331  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.9020194793013009  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4996239260728944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7732197010138298  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8755455582947296  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.297086256603333  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  171  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 172
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5791695202846954  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8147497867692289  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9795456025086594  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4274125059958146  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9739715965180937  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8345672095393691  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.07231466132062836  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3223034475416958  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  172  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 173
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5695879326536875  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2705856090116412  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9244061283861622  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35684604247761276  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.568275509024808  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4673611531888098  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  173  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 174
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6198595332918863  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4774200352654827  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7857561770994724  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8927362499779715  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35444363966849  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8202444210506629  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7991707156727994  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  174  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 175
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.24133050736900152  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46475448627117366  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7024013801336296  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5280714742703043  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4042722782281327  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5317115342439367  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  175  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 176
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5509436037928429  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1711591434731331  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7504680858873958  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9713171860567771  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6736265395367655  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0671082331321956  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  176  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 177
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.26126668955703214  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5019314430939917  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7464498413654745  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25769340201220703  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7654053268706  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5981475226214743  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  177  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 178
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.25672191619388873  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.896982697470245  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45046831975783874  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03047843254055349  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5260785787805926  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2725453625154147  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  178  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 179
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9659004634763003  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3453656997400649  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8158176988683755  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Número Aleatorio:  0.374782122931249  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07783012640163567  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20416291457989955  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9092991161796279  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  179  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 180
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.40297102622117387  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36242140389507516  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02887079328094755  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.37247444864707235  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6563269918064476  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05794162738873754  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  180  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 181
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6773327805888393  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08020757378933341  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.006493001440264323  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2541563716256843  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7673291886997939  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2783372160275843  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  181  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 182
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.431137688230238  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5636073111433014  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06796180613139335  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.15553365961097687  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.011641435913569032  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03942947046243461  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  182  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 183
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6331124240392405  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16191803516078473  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2263595661730341  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5959087936235067  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.269027088562966  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36498172254643346  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  183  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 184
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8300768289150876  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 3 x))

Número Aleatorio:  0.2678398828991948  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03536851068986102  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47240879659172297  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1432863327904963  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6538331857445533  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  184  :
0 : calculando con  (/ (* x x) (/ 3 x))
(/ (* x x) (/ 3 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ 3 x))
Nuevo valor: (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (/ (/ x x) (/ 2 x))
(/ (/ x x) (/ 2 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (/ x x) (/ 2 x))
Nuevo valor: (- (+ x x) (+ 4 -1))
ECM: 5.2283325000000005 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 185
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.808740665137709  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: *
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08604351193396131  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11339958251222759  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9415863891312474  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5353288051242051  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9291489043654636  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.01623080466878235  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  185  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 186
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2689578062616921  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3549567092871665  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9991695353436506  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.702523811164618  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2960190161743971  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5739859582596278  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  186  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 187
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.02212841014809297  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08325485752474682  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2775833156613502  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5558151410563472  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9365776438387118  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6271261947110272  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  187  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 188
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5912166706415032  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09974568778891191  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5230414764942943  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9507781699062893  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6707189181240689  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8853705275290165  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: +
Mutado: (/ (* x x) (+ 3 x))

Número Aleatorio:  0.6894440072924399  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  188  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (+ 3 x))
ECM: 0.008530663302472877 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 189
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6615723053788971  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22611742296828785  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7629100861065549  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4391223157842502  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7201504707567391  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8705727126846204  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  189  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 190
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.237407615064278  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5799215687131102  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.027280874323660886  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3670371354209965  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3760512318946938  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9251161332941039  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  190  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 191
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8729336722590001  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Número Aleatorio:  0.03999411770117822  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9792861499609332  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7699353301178692  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14602496696589562  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7143149579872885  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.356885765272278  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  191  :
0 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 192
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7154501406728841  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18428116706939346  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9813430640466784  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4204817014227047  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.99337887489426  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2385418590323074  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2133275249416543  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  192  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 193
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7715327417923655  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9825095252630095  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4936838059562  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5858215342898702  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7300091952043761  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08953152021240074  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  193  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 194
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6975333731271259  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9086639093225536  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.006275712907414577  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6898542019664416  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9604289378185549  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9050000478670653  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5806402179276977  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  194  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 195
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.058380339039912243  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05317470319467532  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8693088018516949  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.5393936923169095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.532475628131732  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7180464753717307  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  195  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (+ (- x 5) (/ x x))
(+ (- x 5) (/ x x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (+ (- x 5) (/ x x))
Nuevo valor: (- (/ x -5) (* 3 -1))
ECM: 7.6952325 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 196
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7816129150974616  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2781380731510671  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12909903172880333  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9229820723903056  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35930583391723303  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11885733612353355  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  196  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 197
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.37024442610520913  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6314683877344979  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7814842321998708  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28825743268846193  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6097254810568717  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05861699053742486  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  197  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 198
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7894041817991344  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.13540445380291333  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5493728027687497  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9700053822008816  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7419327706556405  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5000030991883421  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  198  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 199
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5206468809193904  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.21864002399970728  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03404593786258392  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5412858802736669  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7162641372199688  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.013421250060469236  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  199  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 200
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.38337637963021387  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8677188722536221  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24725055034971255  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19795490429171803  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9345903500097732  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.015745088631442417  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18546491920280472  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  200  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 201
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.32409368335598976  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22934343972438886  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20904508841574732  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8387771512255991  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: *
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6266443418413227  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7848260839271944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  201  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 202
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2441779171359384  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3593274852766296  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5992356216493998  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.550976381288118  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.520391525797618  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9070146287117871  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  202  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 203
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8468921212614322  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.4440069892974424  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.013177811559992647  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8064363752538101  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8750347202497731  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.5629755264962373  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8771375830608178  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.23103449485000083  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  203  :
0 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 204
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3823099981115361  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6826943206564194  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9415748703659235  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.65722318406883  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5726921894724792  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8027536213303349  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: *
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5965567222176574  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  204  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 205
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.08896867203044012  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6335990599667023  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3545834952589537  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.006336610518716257  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5156596808474492  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.35032550881718705  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  205  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 206
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1771899519550303  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.804979349052699  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20194189620312897  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8964577258151467  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: *
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5222572922235019  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9965460542911019  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9394990464998745  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.054342622339946245  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  206  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 207
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1153097236962104  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9555647273563946  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5419054078527584  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10591500476443516  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6793945461354802  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07085627883630918  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  207  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 208
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.16461908293577954  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6661198927148589  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.34684099761266485  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3466207472014715  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20302362208748181  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6897524608272739  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  208  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 209
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6367181289608961  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.38649335900940784  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.23911032232771534  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0705294581705983  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2704483118828144  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.13929396777848635  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  209  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 210
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.48659244374132726  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9784854845999392  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6840598831254338  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.020357665522501733  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09006975323217137  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7921661988112448  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  210  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 211
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.49071030672778837  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5341897815513825  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5349138277677326  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1308823111834133  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5955815768414364  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.538810906440532  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  211  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 212
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4471137617761334  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6161893316169063  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8722621795160934  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.6919945958274869  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4749181665802562  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8956944271189642  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Número Aleatorio:  0.8988907280752012  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 1
Mutado: (/ (* x x) (- 1 x))

Fitness newPopulation  212  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

10 : calculando con  (/ (* x x) (- 1 x))
ECM: 7.013668541824143 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 213
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.17153598633773381  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.539650443548617  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5376506608416141  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20156088386848203  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.31548144647073295  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7955944583842901  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  213  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 214
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5697742409119358  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.009686311984633766  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8179635224243077  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.8474714007906877  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.04226578461237007  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6908814494450041  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47519375443228173  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  214  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

5 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 215
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5363725980775751  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9458840535027387  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14409572932808645  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.027257292689349955  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5376770511779039  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11612226247004676  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  215  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 216
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7068154091791472  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.752694100613695  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5758592793940592  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6803254181725649  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.012177684121055132  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1214767600847052  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  216  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 217
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4384705127056052  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19979987768516827  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2533071034224358  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6489811106972077  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6109298178475844  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36356500785238943  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  217  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 218
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5043979707095377  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8867519125901634  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.21692730091637114  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06428920471389965  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6812409915095767  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.003995853957243556  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  218  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 219
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3189532652213244  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.29390832978369297  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.656706396336811  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19493165943476976  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8605310008441441  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.8649026046339232  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6949558233914311  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  219  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (+ (/ x -4) (* 0 x))
ECM: 0.10677 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 220
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.42188522540013473  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22933382496203014  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6788745323338854  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4813992385444612  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7109091222888188  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4388852762723561  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  220  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 221
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.19399677111201474  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6802935807887233  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.927063450036068  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5392384441306189  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17087419583609786  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5783606585788064  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  221  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 222
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.045371812488424146  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11782290998803624  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6266899680499112  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7973573170845475  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16617405011177833  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7162007368111813  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  222  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 223
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8831875680970498  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.44317830309221795  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5633278541634865  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.172534737298494  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1526926756176319  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3566789457667966  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  223  :
0 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 224
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.551746047611095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.32473223898373726  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25614086504674916  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1133792680606398  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5953079562955713  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.23629676252373988  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  224  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 225
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2936266782394147  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.503991831192612  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3293382314818214  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8291235684654329  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.01421626883918825  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33669307088832257  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  225  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 226
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.510240594095403  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.192658630390375  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.791696684051089  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8438279639858159  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.8612518510714873  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.8424497193183353  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.2709670919974524  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  226  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

7 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

8 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 227
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.46462238989732907  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6143701372696744  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12322883620048009  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04425568925768064  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3568595477393809  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7054941581021773  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  227  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 228
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4062118028315115  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07401151680200502  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8015161438891885  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5436126107098722  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3622022059790335  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3907118732644005  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  228  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 229
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.26698657541156845  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.29179267855187774  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8330775793041528  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 5
Mutado: (/ (* x x) (- 5 x))

Número Aleatorio:  0.45506327033644944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6778930336078406  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6294020805168112  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  229  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 5 x))
ECM: 0.010562024031684773 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 230
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8680007435273922  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 3 x))

Número Aleatorio:  0.9044956102808066  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.061565207263906796  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5458418336881133  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4802962416351907  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9714250904648574  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5166612017023686  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  230  :
0 : calculando con  (/ (* x x) (/ 3 x))
(/ (* x x) (/ 3 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ 3 x))
Nuevo valor: (* (+ x 1) (+ x -2))
ECM: 5.3508325 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 231
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.21145270768603763  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8446453774481847  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4725483968910328  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40600205537481204  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3090202370070616  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08217889468684147  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  231  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 232
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5799576606530548  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5317030617221908  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.25997302798058364  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5022065553400165  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33247829112714067  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6628287210215229  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  232  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 233
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3738990865836933  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6685479481973421  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.67482823379459  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16005102484600586  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10856108939113185  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6167139904906949  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  233  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 234
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9223593584743431  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10504027007896488  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1755359732298699  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8817890774595263  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.5687615519803187  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5749489364405094  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9531897794740379  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  234  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 235
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2774718041637487  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06924573711546445  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7737569404851292  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9479387759066845  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5708207281934433  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9709723520550867  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2938239383025797  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  235  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 236
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.606980128854721  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11696412931601996  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.531049223643385  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6028265244656841  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3811159281581711  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9804867820748291  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  236  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 237
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.31679284654308526  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45951781733438735  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19847964823585662  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8997942437030957  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.7668230175893509  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.546637373247216  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  237  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 238
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8430031000946911  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.3817360478576526  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7449008721197392  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5508757658870983  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07915830403157698  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6381520824297989  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  238  :
0 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 239
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15819587975788718  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7206297383977878  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.34318294924236514  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9514972496067589  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8839985589793958  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.5712988760020645  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27917944899692226  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  239  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 240
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9806155870045848  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3001928518979451  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.31236387668438004  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9891760597490393  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6162030456384359  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5769677722354754  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9584917357005575  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  240  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 241
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6324668840854751  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9094321130650685  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.38470847061040847  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4013416578479002  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16476745988223152  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4707155303232837  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  241  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 242
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3313814840808459  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0038644306728177202  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9731906083410724  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.31660459032393184  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7402261405564032  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.00407121854554271  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  242  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 243
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1978932354822367  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6989239679908008  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07527722567642581  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09859002050807919  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5634593150239208  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9237569084767876  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  243  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 244
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.13863816471203305  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.34938550430641135  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.846956958012028  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.7155224679014021  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09657062750835788  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08580167329291111  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  244  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 245
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6343683268561635  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6466759455906086  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9315989166679902  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.48862872395498635  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4741183559250004  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4944894448381473  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  245  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 246
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5613840912868365  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4734408856127116  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4431059439127867  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9209108203089788  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7573661980410381  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17523717922993365  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  246  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 247
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9302757865943987  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9425170503811517  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16231763338426353  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22131976407850895  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1179929057281558  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7794214917558375  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3326254710177772  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  247  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 248
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3974007773843843  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1661666862010197  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.94003621043745  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5118290548435275  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9504924015492303  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03135859382162831  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8838331071052113  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Fitness newPopulation  248  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 249
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8150825408848913  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 3 x))

Número Aleatorio:  0.8766415197420567  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8938829926341184  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: /
Mutado: (/ (* x x) (/ 3 x))

Número Aleatorio:  0.22677697166109523  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5033992875005332  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1471507406859287  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.48756430611829626  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  249  :
0 : calculando con  (/ (* x x) (/ 3 x))
(/ (* x x) (/ 3 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ 3 x))
Nuevo valor: (+ (+ -4 0) (- x x))
ECM: 17.178332499999996 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (/ 3 x))
(/ (* x x) (/ 3 x))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (/ 3 x))
Nuevo valor: (/ (/ x 2) (+ x -3))
ECM: 0.09750684331343136 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 250
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2717073304500399  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.228583612837297  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5062009803399196  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1547557932759992  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5692192300670378  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2861598294667037  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  250  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 251
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8301201526874495  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: *
Mutado: (* (* x x) (- 3 x))

Número Aleatorio:  0.38751102440714136  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4256765588223591  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6419896250759869  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3200287591821135  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5732934805186725  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  251  :
0 : calculando con  (* (* x x) (- 3 x))
ECM: 0.45202800000000015 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 252
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9707379853662511  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33580667044563994  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11966088430252997  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0678658864007784  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7234713689333975  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9311222495818468  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33611844801391677  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  252  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 253
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.35112583024003385  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2698328886537532  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5703374770160831  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.11605536022105456  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7587705325808706  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8816307449837075  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  253  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 254
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18198188922093328  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5661989945939114  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.23028150548024562  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.24406028982419548  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.07090122146947042  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.011540572073903133  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  254  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 255
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5023059059125389  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12178497723319626  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.38018674871791347  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.13227059778571026  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.01957693526976445  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16677681189166682  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  255  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 256
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.40359517254668675  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5315458988442155  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0971532729548209  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6299428714814406  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7985766712737538  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.931679940672151  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  256  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 257
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6237779527358162  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5067498166899225  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09392248827904326  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0014227049727151275  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3649918614111358  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4620492700632328  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  257  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 258
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3923331292079224  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7974818950474446  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6068280622944381  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5725989144535428  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2620780877787233  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.048418247314592544  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  258  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 259
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8392694317234718  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2132891397266189  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2716854599170345  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4736357404898387  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9997620363880402  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9954412467529002  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4775623494880443  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  259  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 260
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5531146597980707  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0174350901755147  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3947411027611901  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06413434285512731  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.016052881890378345  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02876333855698443  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  260  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 261
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14427349462992534  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6572589934733819  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9440504828765225  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03700952112363587  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2946022780871924  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.47780128574182024  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  261  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 262
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15843549927693967  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7311038747820409  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6786966774357757  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7159444782215985  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8665956664906463  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.28713433223117446  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  262  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 263
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9541866852391853  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20085771491605586  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7929301144210944  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08494374576471253  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5007136325275454  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9618240238245659  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27684574646868876  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  263  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 264
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.38389696592065936  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.27946638156265546  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.920735756450512  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3223451962188243  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5524600813927113  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8929532359442899  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04499269703423803  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  264  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 265
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.20131748680798922  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3280044157552232  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46437135354062775  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7424833457596298  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.40971146264797864  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7846180700157838  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  265  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 266
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9516557991252698  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8025743524699048  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7920353752706156  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5647009191065107  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7485797954222423  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4697425570148307  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.04292871766083339  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  266  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 267
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2397918198104031  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9860677843788163  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8861431976928571  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9466038791514724  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8816851556930202  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Número Aleatorio:  0.9726614144952673  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22565113994555197  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2879113686495648  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  267  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 268
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9412922041367809  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.18216996487674142  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3559083779071043  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5969309994733575  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5305699747488564  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8148530912812477  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.7276201866382757  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  268  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 269
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9218358760900967  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.31587557385139264  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5526796204457021  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1507251793044787  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22765617542464445  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7094892161813937  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  269  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 270
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9227915512707275  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.016579504386520227  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8084767498899933  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.894146676480214  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: -
Mutado: (- (* x x) (- 3 x))

Número Aleatorio:  0.8784539977164074  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Número Aleatorio:  0.7532307162363087  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9373254441961978  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8782411213266709  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8107558022268192  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Fitness newPopulation  270  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 3
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (/ (- x x) (- 1 -1))
ECM: 0.038332500000000005 

4 : calculando con  (- (* x x) (- 3 x))
ECM: 5.9708325 

5 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 271
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.26929967813495914  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4993242301392461  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8459767204101422  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.4080593745865636  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5518812464357564  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9770484300362537  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.12910826604371128  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  271  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 272
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5275061171452552  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.056538289479678205  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5366893422007508  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9890945562217891  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6637281360013036  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.06777472463037415  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  272  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 273
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3237456672230713  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4293961962463164  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.38013345354897987  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.330431410410134  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8007548875627799  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: 4
Mutado: (/ (* x x) (- 4 x))

Número Aleatorio:  0.7653741704615245  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  273  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 4 x))
ECM: 0.005451833480503661 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 274
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.16149452253564722  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.14466900203850797  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4291834181079496  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9255183033941446  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.20313468513890798  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9514287958350066  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45655914224144867  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  274  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 275
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8873084790855557  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.803958745402901  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: -
Con: -
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9629961692555482  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4611636708668778  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2519750884651055  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.15413484034774427  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3420302741867898  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  275  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 276
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5413688115000531  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9644297345859488  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.02525393009865462  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.963801841238296  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7724585477281082  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4054216469292704  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9611595842622938  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  276  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 277
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6125302166062055  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.45199385267402037  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1557864080537672  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.26759887579571917  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2829141041296428  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.48064094993107287  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  277  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 278
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2687965898323512  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.28507327946957695  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2618074764579028  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10934167604132106  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.412835496280754  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9865887760895947  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  278  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 279
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.09575581614290907  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9001970606152075  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5573742129666034  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7954018811420095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33128896147814324  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.031668723199002935  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  279  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 280
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18142019459141578  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.966800112526506  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.36124355691919163  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9722265509239529  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9384695050903381  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5765830376264767  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.16723092890148672  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  280  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 281
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18850262776210192  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6453085386201002  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8908323486299274  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2887257959057353  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.870786495253985  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: *
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9463385942841099  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39123905545652293  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  281  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 282
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7140240574345776  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7292587090085285  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5674037644923379  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8639610610274463  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.5338019431677208  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.26587517740453015  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  282  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (- (* -5 x) (* 2 x))
ECM: 15.4208325 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 283
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.868046766924002  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4150995190124145  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7690288316420705  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.19711774997789444  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03375628773286321  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.30544760977809604  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  283  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 284
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8747060883386747  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2949216340330907  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9756056345181418  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8437200443305783  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.7350189317057572  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8028591382291623  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: -
Mutado: (/ (- x x) (- 3 x))

Número Aleatorio:  0.3740663813274915  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.698864032763238  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  284  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (/ (+ 0 5) (- x x))
(/ (+ 0 5) (- x x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (+ 0 5) (- x x))
Nuevo valor: (/ (/ 4 -2) (* -1 x))
(/ (/ 4 -2) (* -1 x))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (/ 4 -2) (* -1 x))
Nuevo valor: (+ (- 2 -1) (+ 3 1))
ECM: 47.0433325 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (- x x) (- 3 x))
ECM: 0.038332500000000005 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 285
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7482115560821256  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.33896334661591065  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2591051102304973  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.03149807668399718  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.05605634720675712  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.019138724182470757  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  285  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 286
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.34333488428831804  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6120922747527756  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9629015729885139  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3194806634859164  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9396010894913587  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2669902454853219  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9079309650921311  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  286  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 287
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9713601429667247  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1714198929168218  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6278967954916227  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4024537728159444  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4234173007247095  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4150788063915596  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  287  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 288
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.619481152439909  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9454530515090195  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7554890491994903  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.21738785267781358  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2506887689495808  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8674334073570851  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.9762139911279999  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Fitness newPopulation  288  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (+ (/ x -1) (/ x x))
(+ (/ x -1) (/ x x))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (+ (/ x -1) (/ x x))
Nuevo valor: (/ (/ x x) (/ x 3))
(/ (/ x x) (/ x 3))  evaluado da división por 0, generando nuevo valor de pos 9
Anterior: (/ (/ x x) (/ x 3))
Nuevo valor: (+ (+ x x) (* x 4))
ECM: 9.0833325 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 289
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.25184230325528945  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6574583485980942  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.46005017254771463  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.10268163560510724  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.435378658598097  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39012711296212144  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  289  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 290
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.37329528939867085  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6921336151005184  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5716613093723589  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7975992237135903  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08992134925011497  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.22148115914301358  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  290  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 291
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.47879060867556533  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.31533686934784255  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9066425046460845  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.018605428847469296  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3824644050148167  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7443161853825055  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  291  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 292
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9773420451386463  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8089290832811089  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.5485991607457883  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.1316904400977793  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.39566803698257635  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4962487094787491  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7867003381399036  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  292  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 1
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (/ (+ x 3) (- x x))
(/ (+ x 3) (- x x))  evaluado da división por 0, generando nuevo valor de pos 1
Anterior: (/ (+ x 3) (- x x))
Nuevo valor: (- (/ 4 0) (/ 1 5))
(- (/ 4 0) (/ 1 5))  evaluado da división por 0, generando nuevo valor de pos 1
Anterior: (- (/ 4 0) (/ 1 5))
Nuevo valor: (+ (- x x) (- -5 1))
ECM: 37.7483325 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 293
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4518672845199816  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.34556355309217157  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3300288643044086  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6445303198611861  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.17832479420445146  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5471797062191386  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  293  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 294
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8729724079559854  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Número Aleatorio:  0.785614414793633  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9177200375447802  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9905277731518637  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.4478350338941425  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.758674328253405  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.48748785986716103  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  294  :
0 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 295
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14629732849535404  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.008974217685714714  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8185589779111717  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6881031458536138  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.13407960351268822  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2700485189558042  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  295  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 296
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5109255577257406  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9092793700638743  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.08854627615884325  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8451639109233262  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: 3
Con: -4
Mutado: (/ (* x x) (- -4 x))

Número Aleatorio:  0.6946174772348885  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7379855770323364  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.842832634247514  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (- 3 x))

Fitness newPopulation  296  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- -4 x))
ECM: 0.07708527336039002 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (+ (* x x) (- 3 x))
ECM: 7.2758325 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 297
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.505995877664307  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3266835931959605  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.8279040755529985  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: /
Con: /
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5398315008368392  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.6342512541485363  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.26371156622637704  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  297  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 298
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8656818215699853  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: +
Mutado: (/ (+ x x) (- 3 x))

Número Aleatorio:  0.6984443354321515  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7477838739372734  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.09584124759544921  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0681501074939116  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7403704842341845  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  298  :
0 : calculando con  (/ (+ x x) (- 3 x))
ECM: 0.07830407330342881 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 299
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6757422105766464  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7411216861334373  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9585855164419522  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9378369903374429  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.862145651155043  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: *
Con: /
Mutado: (/ (/ x x) (- 3 x))

Número Aleatorio:  0.9456546734931298  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.7347404506696105  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.2330509367354221  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  299  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (/ x x) (- 3 x))
(/ (/ x x) (- 3 x))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (/ x x) (- 3 x))
Nuevo valor: (* (* x 5) (+ x 0))
ECM: 3.1049324999999994 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

11 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

GENERACION: 300
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Población:
 ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
Fitness:
 [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.854640762164258  entonces: Se Muta

Mutamos: (/ (* x x) (- 3 x))
Mutaremos: x
Con: x
Mutado: (/ (* x x) (- 3 x))

Número Aleatorio:  0.0034882989242668305  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9988529271721048  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3381970505377352  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.9373492489209666  entonces: Se reproduce

Padre1/Hijo1: (/ (* x x) (- 3 x))

Número Aleatorio:  0.3244962712196433  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Número Aleatorio:  0.5711262443054681  entonces: Se cruza

Padre 1:  (/ (* x x) (- 3 x))  --  Padre 2: (/ (* x x) (- 3 x))
Hijo 1:  (/ (* x x) (- 3 x))  --  Hijo 2: (/ (* x x) (- 3 x))

Fitness newPopulation  300  :
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

10 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']
0 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

1 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

2 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

3 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

4 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

5 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

6 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

7 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

8 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

9 : calculando con  (/ (* x x) (- 3 x))
ECM: 0.0004276439471411958 

Se realizaron  0  modificaciones a la población.
Fitness: [0.00042764 0.00042764 0.00042764 0.00042764 0.00042764 0.00042764
 0.00042764 0.00042764 0.00042764 0.00042764]

Nueva población: ['(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))' '(/ (* x x) (- 3 x))'
 '(/ (* x x) (- 3 x))']

FIN DEL PROCESO 01-05-2019 22:35:46
Tiempo: 19.90613293647766
