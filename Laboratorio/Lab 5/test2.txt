
COMIENZO PROCESO:  01-05-2019 22:37:32
Población Inicial:
 ['(/ (- x 4) (+ 3 1))', '(* (- -3 x) (+ 5 x))', '(- (+ x 4) (+ -4 x))', '(+ (+ 2 x) (- -4 3))', '(* (* -2 x) (+ -2 5))', '(+ (* x x) (/ x -3))', '(+ (/ x -5) (/ x 2))', '(/ (/ x x) (- x -4))', '(+ (* -1 0) (* 0 x))', '(- (+ x 5) (+ -5 -4))']

GENERACION: 1
0 : calculando con  (/ (- x 4) (+ 3 1))
ECM: 1.06552 

1 : calculando con  (* (- -3 x) (+ 5 x))
ECM: 369.2699925 

2 : calculando con  (- (+ x 4) (+ -4 x))
ECM: 61.75833250000001 

3 : calculando con  (+ (+ 2 x) (- -4 3))
ECM: 22.045832500000007 

4 : calculando con  (* (* -2 x) (+ -2 5))
ECM: 11.5133325 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

7 : calculando con  (/ (/ x x) (- x -4))
(/ (/ x x) (- x -4))  evaluado da división por 0, generando nuevo valor de pos 7
Anterior: (/ (/ x x) (- x -4))
Nuevo valor: (* (- 0 x) (- x x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (- (+ x 5) (+ -5 -4))
ECM: 204.7308325 

Se realizaron  1  modificaciones a la población.
Población:
 ['(/ (- x 4) (+ 3 1))', '(* (- -3 x) (+ 5 x))', '(- (+ x 4) (+ -4 x))', '(+ (+ 2 x) (- -4 3))', '(* (* -2 x) (+ -2 5))', '(+ (* x x) (/ x -3))', '(+ (/ x -5) (/ x 2))', '(/ (/ x x) (- x -4))', '(+ (* -1 0) (* 0 x))', '(- (+ x 5) (+ -5 -4))']
Fitness:
 [1.06552000e+00 3.69269993e+02 6.17583325e+01 2.20458325e+01
 1.15133325e+01 2.49916667e-03 3.23250000e-03 3.83325000e-02
 3.83325000e-02 2.04730832e+02]
Probabilidad: [0.1217599  0.00032979 0.10174403 0.11484081 0.11831432 0.12211047
 0.12211023 0.12209866 0.12209866 0.05459314]
Probabilidad acum: [0.1217599  0.12208969 0.22383372 0.33867452 0.45698884 0.57909931
 0.70120955 0.8233082  0.94540686 1.        ]

Número Aleatorio:  0.9308636693618165  entonces: Se reproduce

Padre1/Hijo1: (/ (/ x x) (- x -4))

Número Aleatorio:  0.2172812055702258  entonces: Se cruza

Padre 1:  (- (+ x 5) (+ -5 -4))  --  Padre 2: (+ (/ x -5) (/ x 2))
Hijo 1:  (- (+ x 5) (/ x 2))  --  Hijo 2: (+ (/ x -5) (+ -5 -4))

Número Aleatorio:  0.3016547707612488  entonces: Se cruza

Padre 1:  (/ (- x 4) (+ 3 1))  --  Padre 2: (- (+ x 4) (+ -4 x))
Hijo 1:  (/ (- x 4) (+ -4 x))  --  Hijo 2: (- (+ x 4) (+ 3 1))

Número Aleatorio:  0.5782489239738735  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.6772212500376492  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* -1 0) (/ x -3))

Número Aleatorio:  0.38686851110948495  entonces: Se cruza

Padre 1:  (/ (- x 4) (+ 3 1))  --  Padre 2: (* (* -2 x) (+ -2 5))
Hijo 1:  (/ (- x 4) (+ -2 5))  --  Hijo 2: (* (* -2 x) (+ 3 1))

Fitness newPopulation  1  :
0 : calculando con  (/ (/ x x) (- x -4))
(/ (/ x x) (- x -4))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (/ x x) (- x -4))
Nuevo valor: (/ (/ x x) (- x x))
(/ (/ x x) (- x x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (/ x x) (- x x))
Nuevo valor: (- (/ -5 2) (- x 4))
ECM: 0.9983325000000001 

1 : calculando con  (- (+ x 5) (/ x 2))
ECM: 25.833332500000004 

2 : calculando con  (+ (/ x -5) (+ -5 -4))
ECM: 85.27523249999999 

3 : calculando con  (/ (- x 4) (+ -4 x))
ECM: 0.7533325 

4 : calculando con  (- (+ x 4) (+ 3 1))
ECM: 0.12083250000000001 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* -1 0) (/ x -3))
ECM: 0.13749916666666667 

9 : calculando con  (/ (- x 4) (+ -2 5))
ECM: 1.7602769444444448 

10 : calculando con  (* (* -2 x) (+ 3 1))
ECM: 19.898332500000002 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))' '(+ (* x x) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(/ (/ x x) (- x -4))'
 '(+ (* -1 0) (* 0 x))' '(- (+ x 4) (+ 3 1))' '(+ (* -1 0) (/ x -3))'
 '(/ (- x 4) (+ -4 x))']

GENERACION: 2
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

2 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

3 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (/ (/ x x) (- x -4))
(/ (/ x x) (- x -4))  evaluado da división por 0, generando nuevo valor de pos 5
Anterior: (/ (/ x x) (- x -4))
Nuevo valor: (+ (/ x x) (/ x -5))
(+ (/ x x) (/ x -5))  evaluado da división por 0, generando nuevo valor de pos 5
Anterior: (+ (/ x x) (/ x -5))
Nuevo valor: (/ (/ x x) (* 0 -2))
(/ (/ x x) (* 0 -2))  evaluado da división por 0, generando nuevo valor de pos 5
Anterior: (/ (/ x x) (* 0 -2))
Nuevo valor: (- (* x -1) (+ 5 x))
ECM: 37.0083325 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (- (+ x 4) (+ 3 1))
ECM: 0.12083250000000001 

8 : calculando con  (+ (* -1 0) (/ x -3))
ECM: 0.13749916666666667 

9 : calculando con  (/ (- x 4) (+ -4 x))
ECM: 0.7533325 

Se realizaron  3  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))' '(+ (* x x) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(/ (/ x x) (- x -4))'
 '(+ (* -1 0) (* 0 x))' '(- (+ x 4) (+ 3 1))' '(+ (* -1 0) (/ x -3))'
 '(/ (- x 4) (+ -4 x))']
Fitness:
 [2.49916667e-03 3.23250000e-03 3.83325000e-02 3.83325000e-02
 3.83325000e-02 3.70083325e+01 3.83325000e-02 1.20832500e-01
 1.37499167e-01 7.53332500e-01]
Probabilidad: [0.11115928 0.11115714 0.11105448 0.11105448 0.11105448 0.0029248
 0.11105448 0.11081318 0.11076444 0.10896325]
Probabilidad acum: [0.11115928 0.22231642 0.3333709  0.44442538 0.55547986 0.55840465
 0.66945913 0.78027231 0.89103675 1.        ]

Número Aleatorio:  0.9368587439481656  entonces: Se reproduce

Padre1/Hijo1: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.2513795401216805  entonces: Se cruza

Padre 1:  (+ (* -1 0) (/ x -3))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1336098769457542  entonces: Se cruza

Padre 1:  (- (+ x 4) (+ 3 1))  --  Padre 2: (- (+ x 4) (+ 3 1))
Hijo 1:  (- (+ x 4) (+ 3 1))  --  Hijo 2: (- (+ x 4) (+ 3 1))

Número Aleatorio:  0.0862191446254259  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (- (+ x 4) (+ 3 1))
Hijo 1:  (+ (* -1 0) (+ 3 1))  --  Hijo 2: (- (+ x 4) (* 0 x))

Número Aleatorio:  0.04105864480704924  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (- (+ x 4) (+ 3 1))
Hijo 1:  (+ (* -1 0) (+ 3 1))  --  Hijo 2: (- (+ x 4) (* 0 x))

Número Aleatorio:  0.4010218031929291  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (- (+ x 4) (+ 3 1))
Hijo 1:  (+ (* x x) (+ 3 1))  --  Hijo 2: (- (+ x 4) (/ x -3))

Fitness newPopulation  2  :
0 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

1 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (- (+ x 4) (+ 3 1))
ECM: 0.12083250000000001 

4 : calculando con  (- (+ x 4) (+ 3 1))
ECM: 0.12083250000000001 

5 : calculando con  (+ (* -1 0) (+ 3 1))
ECM: 14.8983325 

6 : calculando con  (- (+ x 4) (* 0 x))
ECM: 18.580832500000003 

7 : calculando con  (+ (* -1 0) (+ 3 1))
ECM: 14.8983325 

8 : calculando con  (- (+ x 4) (* 0 x))
ECM: 18.580832500000003 

9 : calculando con  (+ (* x x) (+ 3 1))
ECM: 17.1783325 

10 : calculando con  (- (+ x 4) (/ x -3))
ECM: 19.93499916666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(- (+ x 4) (+ 3 1))']

GENERACION: 3
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

3 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (- (+ x 4) (+ 3 1))
ECM: 0.12083250000000001 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(- (+ x 4) (+ 3 1))']
Fitness:
 [0.00249917 0.00249917 0.0032325  0.0383325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.1208325 ]
Probabilidad: [0.10307916 0.10307916 0.10301157 0.09977633 0.09977633 0.09977633
 0.09977633 0.09977633 0.09977633 0.09217213]
Probabilidad acum: [0.10307916 0.20615833 0.3091699  0.40894623 0.50872256 0.60849888
 0.70827521 0.80805154 0.90782787 1.        ]

Número Aleatorio:  0.8823773988892608  entonces: Se Muta

Mutamos: (- (+ x 4) (+ 3 1))
Mutaremos: 1
Con: -1
Mutado: (- (+ x 4) (+ 3 -1))

Número Aleatorio:  0.8854763652524994  entonces: Se Muta

Mutamos: (+ (* -1 0) (* 0 x))
Mutaremos: *
Con: *
Mutado: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.6625556508397671  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (- (+ x 4) (+ 3 1))
Hijo 1:  (+ (* -1 0) (+ 3 1))  --  Hijo 2: (- (+ x 4) (* 0 x))

Número Aleatorio:  0.9485149270483259  entonces: Se reproduce

Padre1/Hijo1: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.9993035792453001  entonces: Se reproduce

Padre1/Hijo1: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.4297414367865031  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.6004823487653735  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.2235322031924758  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (- (+ x 4) (+ 3 1))
Hijo 1:  (+ (* x x) (+ 3 1))  --  Hijo 2: (- (+ x 4) (/ x -3))

Fitness newPopulation  3  :
0 : calculando con  (- (+ x 4) (+ 3 -1))
ECM: 5.3508325 

1 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (+ (* -1 0) (+ 3 1))
ECM: 14.8983325 

3 : calculando con  (- (+ x 4) (* 0 x))
ECM: 18.580832500000003 

4 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

10 : calculando con  (+ (* x x) (+ 3 1))
ECM: 17.1783325 

11 : calculando con  (- (+ x 4) (/ x -3))
ECM: 19.93499916666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* -1 0) (* 0 x))']

GENERACION: 4
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

3 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* -1 0) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.0032325  0.0383325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10248909 0.10248909 0.10241653 0.09894361 0.09894361 0.09894361
 0.09894361 0.09894361 0.09894361 0.09894361]
Probabilidad acum: [0.10248909 0.20497818 0.30739472 0.40633833 0.50528194 0.60422555
 0.70316916 0.80211278 0.90105639 1.        ]

Número Aleatorio:  0.6747753292668758  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* -1 0) (/ x -3))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.5002608299848359  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.8338887396127774  entonces: Se Muta

Mutamos: (+ (/ x -5) (/ x 2))
Mutaremos: +
Con: /
Mutado: (/ (/ x -5) (/ x 2))

Número Aleatorio:  0.09346859327392465  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.38505597761165544  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* -1 0) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.4672603049614874  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* -1 0) (/ x -3))

Fitness newPopulation  4  :
0 : calculando con  (+ (* -1 0) (/ x -3))
ECM: 0.13749916666666667 

1 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

3 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (/ (/ x -5) (/ x 2))
(/ (/ x -5) (/ x 2))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (/ x -5) (/ x 2))
Nuevo valor: (+ (+ -5 -2) (* -3 3))
ECM: 260.5983325 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

10 : calculando con  (+ (* -1 0) (/ x -3))
ECM: 0.13749916666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']

GENERACION: 5
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

3 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.0032325  0.0383325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10248909 0.10248909 0.10241653 0.09894361 0.09894361 0.09894361
 0.09894361 0.09894361 0.09894361 0.09894361]
Probabilidad acum: [0.10248909 0.20497818 0.30739472 0.40633833 0.50528194 0.60422555
 0.70316916 0.80211278 0.90105639 1.        ]

Número Aleatorio:  0.8391256230338927  entonces: Se Muta

Mutamos: (+ (* x x) (* 0 x))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (* 0 x))

Número Aleatorio:  0.7980081374514387  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (/ x -5) (/ x 2))
Hijo 1:  (+ (* x x) (/ x 2))  --  Hijo 2: (+ (/ x -5) (* 0 x))

Número Aleatorio:  0.33917326412083415  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.29153662913863476  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.3110827751847747  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.5595014841855834  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (/ x -5) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x 2))

Fitness newPopulation  5  :
0 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

1 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

2 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

3 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (/ x -5) (/ x -3))
ECM: 0.22739916666666665 

10 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']

GENERACION: 6
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

3 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* -1 0) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.0032325  0.0383325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10248909 0.10248909 0.10241653 0.09894361 0.09894361 0.09894361
 0.09894361 0.09894361 0.09894361 0.09894361]
Probabilidad acum: [0.10248909 0.20497818 0.30739472 0.40633833 0.50528194 0.60422555
 0.70316916 0.80211278 0.90105639 1.        ]

Número Aleatorio:  0.9557725972766825  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (* 0 x))

Número Aleatorio:  0.9159700753366221  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (* 0 x))

Número Aleatorio:  0.8955649647062013  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.625328917937276  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.5452554686479298  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Número Aleatorio:  0.5210893669670973  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (/ x -5) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x 2))

Número Aleatorio:  0.360987461907773  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* -1 0) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* -1 0) (* 0 x))

Fitness newPopulation  6  :
0 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

1 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (- 2 0) (+ x x))
ECM: 7.803332500000002 

3 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

8 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

10 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']

GENERACION: 7
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

3 : calculando con  (+ (* -1 0) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* -1 0) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.0032325  0.0383325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10248909 0.10248909 0.10241653 0.09894361 0.09894361 0.09894361
 0.09894361 0.09894361 0.09894361 0.09894361]
Probabilidad acum: [0.10248909 0.20497818 0.30739472 0.40633833 0.50528194 0.60422555
 0.70316916 0.80211278 0.90105639 1.        ]

Número Aleatorio:  0.5424777576775769  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.24504903907743714  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.31421362878599135  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.8748345719564695  entonces: Se Muta

Mutamos: (+ (* x x) (* 0 x))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (* 0 x))

Número Aleatorio:  0.5727864078881554  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.9315172617134518  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (* 0 x))

Número Aleatorio:  0.3437378689956262  entonces: Se cruza

Padre 1:  (+ (* -1 0) (* 0 x))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* -1 0) (/ x -3))  --  Hijo 2: (+ (* x x) (* 0 x))

Fitness newPopulation  7  :
0 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

1 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

3 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

10 : calculando con  (+ (* -1 0) (/ x -3))
ECM: 0.13749916666666667 

11 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']

GENERACION: 8
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

3 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.0032325  0.0383325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10248909 0.10248909 0.10241653 0.09894361 0.09894361 0.09894361
 0.09894361 0.09894361 0.09894361 0.09894361]
Probabilidad acum: [0.10248909 0.20497818 0.30739472 0.40633833 0.50528194 0.60422555
 0.70316916 0.80211278 0.90105639 1.        ]

Número Aleatorio:  0.5859899159062497  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (/ x -5) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x 2))

Número Aleatorio:  0.6817208051721722  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (/ x -5) (/ x 2))
Hijo 1:  (+ (* x x) (/ x 2))  --  Hijo 2: (+ (/ x -5) (* 0 x))

Número Aleatorio:  0.3679659770863837  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.28018478576361905  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.5891657550356139  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (/ x -5) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x 2))

Número Aleatorio:  0.5802282381191127  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (/ x -5) (/ x 2))
Hijo 1:  (+ (* x x) (/ x 2))  --  Hijo 2: (+ (/ x -5) (/ x -3))

Fitness newPopulation  8  :
0 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

1 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

2 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

3 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

9 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

10 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

11 : calculando con  (+ (/ x -5) (/ x -3))
ECM: 0.22739916666666665 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (/ x -5) (/ x 2))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']

GENERACION: 9
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (/ x -5) (/ x 2))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.0032325  0.0383325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.102127   0.102127   0.102127   0.1020547  0.09859405 0.09859405
 0.09859405 0.09859405 0.09859405 0.09859405]
Probabilidad acum: [0.102127   0.204254   0.30638101 0.40843571 0.50702976 0.6056238
 0.70421785 0.8028119  0.90140595 1.        ]

Número Aleatorio:  0.3006857589291526  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (/ x -5) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x 2))

Número Aleatorio:  0.44697698563434685  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.22424599731576134  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.8236496551839007  entonces: Se Muta

Mutamos: (+ (* x x) (* 0 x))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (* 0 x))

Número Aleatorio:  0.46483704068145937  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (/ x -5) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x 2))

Número Aleatorio:  0.9651719180965374  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6601202402336389  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (/ x -5) (/ x 2))
Hijo 1:  (+ (* x x) (/ x 2))  --  Hijo 2: (+ (/ x -5) (* 0 x))

Fitness newPopulation  9  :
0 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

1 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

2 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

3 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

4 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

8 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

11 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']

GENERACION: 10
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

7 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

8 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))' '(+ (* x x) (* 0 x))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.0032325  0.0383325
 0.0383325  0.0383325  0.0383325  0.0383325 ]
Probabilidad: [0.10176746 0.10176746 0.10176746 0.10176746 0.10169541 0.09824695
 0.09824695 0.09824695 0.09824695 0.09824695]
Probabilidad acum: [0.10176746 0.20353493 0.30530239 0.40706985 0.50876527 0.60701221
 0.70525916 0.80350611 0.90175305 1.        ]

Número Aleatorio:  0.5624889519576314  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.15329306021977485  entonces: Se cruza

Padre 1:  (+ (/ x -5) (/ x 2))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (/ x -5) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x 2))

Número Aleatorio:  0.6709473921642379  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.716433685815636  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5677829392882723  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (* 0 x))

Número Aleatorio:  0.06637819629828856  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (* 0 x))

Fitness newPopulation  10  :
0 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

1 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (+ (/ x -5) (* 0 x))
ECM: 0.09023250000000001 

3 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

10 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

11 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* x x) (* 0 x))']

GENERACION: 11
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (/ x -5) (/ x 2))
ECM: 0.0032325 

9 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (/ x -5) (/ x 2))'
 '(+ (* x x) (* 0 x))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.0032325  0.0383325 ]
Probabilidad: [0.10035427 0.10035427 0.10035427 0.10035427 0.10035427 0.10035427
 0.10035427 0.10035427 0.10028322 0.09688264]
Probabilidad acum: [0.10035427 0.20070854 0.3010628  0.40141707 0.50177134 0.60212561
 0.70247987 0.80283414 0.90311736 1.        ]

Número Aleatorio:  0.8192639468151466  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7383756999734461  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (* 0 x))
Hijo 1:  (+ (* x x) (* 0 x))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7887947671917289  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (/ x -5) (/ x 2))
Hijo 1:  (+ (* x x) (/ x 2))  --  Hijo 2: (+ (/ x -5) (/ x -3))

Número Aleatorio:  0.6866752452820983  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44364900377872374  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5450788691310587  entonces: Se cruza

Padre 1:  (+ (* x x) (* 0 x))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (* 0 x))

Fitness newPopulation  11  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

4 : calculando con  (+ (/ x -5) (/ x -3))
ECM: 0.22739916666666665 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (* 0 x))
ECM: 0.038332500000000005 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 12
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9295355797117455  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.26172946637698535  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8222766489506494  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6343701465830652  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.34663366475993695  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06865366185018129  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15743010195518248  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  12  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 13
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6840015636618082  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7461133787604479  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8276868969379297  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8515297677693403  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6237692389611165  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6005606196640746  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06169921971487724  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  13  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 14
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4694845833743315  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4189802371790523  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18365641417905565  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44272721622453015  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0484323040277268  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8029550808619864  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: *
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  14  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 15
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.34725269430760086  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.937421208300799  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21322714709872248  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6108428875538284  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5967974843572829  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8580482527295725  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9807545231661093  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  15  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 16
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.651632751170342  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7446513970154447  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.046855998421284295  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27812340673279057  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.49905314973383363  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10214673319202072  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  16  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 17
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8669097310605094  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.1267182716223667  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6897858405322341  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6500442706131467  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8929893790732963  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.712042510864623  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06476515076927192  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  17  :
0 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 18
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4137938910114518  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36718591106117593  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6091701052692792  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5274678032969483  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3829493364211607  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05111539027754397  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  18  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 19
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.699051986716084  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5723224175386683  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9309776163611747  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7023953837564091  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22167679835021903  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43930552899352526  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  19  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 20
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8121978522613206  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.035830741277651734  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20088295582506488  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2824309498125043  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7144784425049254  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14541588939706385  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  20  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 21
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4122883583997321  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5370368690597309  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41022296581240736  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5589232409064654  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6342886895198775  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8123325383102012  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  21  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 22
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8145153538796964  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.34722497459600776  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6787516972450128  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22784434885585314  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4891641124805223  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6691887490392772  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  22  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 23
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.38544017276597586  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.844136124235197  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: -
Mutado: (+ (* x x) (- x -3))

Número Aleatorio:  0.05593110102977272  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3721417398053052  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29492677817861146  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15969201575526748  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  23  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (- x -3))
ECM: 13.0808325 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 24
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2202076498487574  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3372596306679174  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6110970547610212  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14913756649082355  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5919551457887696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.023328733492596565  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  24  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 25
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3745824946282793  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3692373674939895  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40320512585861956  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05237591552347087  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.874392143414406  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.7184745581075018  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  25  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 26
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.304294574304103  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20492603814060883  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04834876282202649  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8499798998320596  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: /
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4787700188940699  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.842371574380175  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7973534944847053  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  26  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 27
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5301917586135614  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8809564626200026  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.18656371559135365  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5383873016818204  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.559145124642276  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7208065304598057  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  27  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 28
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.30990538975064374  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7464265829958171  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42209737481163634  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9457179178449284  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10098711919580705  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8382854121890955  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4571533663760675  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  28  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 29
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.763504580393625  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05993273755665618  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.013739709495665942  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23489300958583392  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6743538317270098  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5128911883420554  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  29  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 30
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.36467727278964945  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12004976508564402  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5187426202077098  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38561965369905493  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8108577678172163  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.005367481375670224  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  30  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (/ 1 x) (* 4 3))
(- (/ 1 x) (* 4 3))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (- (/ 1 x) (* 4 3))
Nuevo valor: (/ (/ -3 0) (* -5 x))
(/ (/ -3 0) (* -5 x))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (/ -3 0) (* -5 x))
Nuevo valor: (- (- 2 -1) (+ x -2))
ECM: 19.600832500000003 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 31
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.37949593157226946  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08544129083254115  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2751764004736207  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7566691142235088  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4806392618498434  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4722325379456458  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  31  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 32
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3248826599306879  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8407264113424665  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: -
Mutado: (+ (- x x) (/ x -3))

Número Aleatorio:  0.36234899699609524  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.554790487338773  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9248570312398018  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6416328411204969  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19976683404574647  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  32  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (- x x) (/ x -3))
ECM: 0.13749916666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 33
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3272593848928971  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04010900908255577  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18402210020304155  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5724880916108339  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7893264896668725  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.792871764204912  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  33  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 34
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8728851991265587  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.720820335985721  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5517052323731614  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18239891576899148  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4881820422390192  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3321735953489803  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  34  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 35
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.31338796226169074  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4904305500030903  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3137940821110897  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5590100096516639  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24993175691611214  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12643215419218312  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  35  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 36
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9341846621357536  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7089828748652689  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7182768874963666  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5248481075942196  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4480161846136207  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6842981158515598  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  36  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 37
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.712703147583592  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18920192957412374  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8420550440183215  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5617535325806186  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9211893337840704  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20349180394589694  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08995138655301127  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  37  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 38
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.02460826899366142  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9335158232826217  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.008381159790131432  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8991449133795769  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -2
Mutado: (+ (* x x) (/ x -2))

Número Aleatorio:  0.7708650765538446  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.888631962727596  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: *
Mutado: (+ (* x x) (* x -3))

Número Aleatorio:  0.7886927941171752  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  38  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -2))
ECM: 0.008332499999999998 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (* x -3))
ECM: 1.9958325 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 39
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.43925312925082394  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6719321914228762  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8296609603095583  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5692387713514961  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9447471062897776  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8141793321492015  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8790448780381733  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6375291905924454  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  39  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 40
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.32198635092644656  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6800265760849046  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8154471692317253  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (+ x -3))

Número Aleatorio:  0.7442900356585683  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7347638422347952  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.768253130408693  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  40  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (+ x -3))
ECM: 5.9708325 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 41
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9648124248698078  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8885865634954856  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9382106624024892  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22844874616944755  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5863203664350949  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9972514203858999  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8202027413789074  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: -
Mutado: (+ (- x x) (/ x -3))

Número Aleatorio:  0.46477414265550754  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  41  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (- x x) (/ x -3))
ECM: 0.13749916666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 42
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6165875460059004  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9950349216963895  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6273246065620715  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7929297136547769  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09605390157253857  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.025063287038478155  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  42  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 43
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8643990936027488  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -3
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13354384068660585  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21062889843375088  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6268081555906667  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.036221706937697995  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9685027171190683  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24811144098155935  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  43  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 44
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8737209852033021  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.18741896451046003  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8305435270694993  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: -
Mutado: (+ (- x x) (/ x -3))

Número Aleatorio:  0.22610757183308094  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19549340305702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10468027108703026  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7741043579759376  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  44  :
0 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (- -2 2) (/ x x))
(+ (- -2 2) (/ x x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (+ (- -2 2) (/ x x))
Nuevo valor: (- (/ x x) (- x x))
(- (/ x x) (- x x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (- (/ x x) (- x x))
Nuevo valor: (+ (+ x x) (/ x 4))
ECM: 1.02552 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (- x x) (/ x -3))
ECM: 0.13749916666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  3  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 45
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8599605204332004  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: /
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21904939887592678  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11814151916711535  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4699478740159393  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42440492790073014  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15643263744219937  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  45  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 46
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9320895216492844  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8902787651032432  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -4
Mutado: (+ (* x x) (/ x -4))

Número Aleatorio:  0.6063831951266447  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08464727886048318  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.548139021833534  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1634922076906018  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8848237205280948  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Fitness newPopulation  46  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -4))
ECM: 0.005520000000000003 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 10
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (- x 5) (* x x))
ECM: 24.797492499999997 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 47
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2194984059661952  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8316741551800743  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8202692656492333  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13848440119167393  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6725949972137713  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8309540172521863  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 3
Mutado: (+ (* x x) (/ x 3))

Número Aleatorio:  0.9489382371847531  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8387028785792432  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  47  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x 3))
ECM: 0.13749916666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 48
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5114909666809468  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0023504706150995203  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5345253716717878  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.25061369669253664  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7744825594097188  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05356057938054337  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  48  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 49
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5740601936613522  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.25323448554252503  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3184469938337624  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04329257506479334  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6380443763055573  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8919892822641228  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  49  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 50
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7076135217883137  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0031162662669377283  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9234549074741119  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13325346041035036  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.311928699651991  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7423211325969392  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  50  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 51
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.416788189863078  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4930195333600442  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1546311805399423  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7396802143725884  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.020085810233471113  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7660939452370924  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  51  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 52
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.47181068833236506  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.027692445202697757  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.039557755179627785  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5051891795883559  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3270234767651482  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5956928334407194  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  52  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 53
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14923589154569228  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.52330905397055  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06664997945502416  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2173613295522696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20087382174524415  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.039152054074963694  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  53  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 54
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.22831725643165202  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13241364890103213  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6205158569444703  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6024492182607212  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6725786326676519  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.033754381604793604  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  54  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 55
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4591696658226987  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5722493444566129  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4703765518424118  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7918420073398911  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36399884333090227  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5247464030115371  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  55  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 56
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.19649296800212668  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6904689615508506  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38608669914099736  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7374801307346944  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6290185595002231  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8462569818246516  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 2
Mutado: (+ (* x x) (/ x 2))

Fitness newPopulation  56  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 57
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9542913509461979  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15738193449502136  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9444589352647093  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.053749056436456444  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3350125885350903  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5126433137263946  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7741146122405818  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  57  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 58
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8689186344001171  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09974249136127711  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33903379339504025  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.057988797659543345  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5716958286136646  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5113769034132188  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  58  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 59
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6625576880073737  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2587415389631307  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2590731939315293  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35090194786364537  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8836427514630129  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.8270991205090463  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: +
Mutado: (+ (+ x x) (/ x -3))

Número Aleatorio:  0.2875849370763821  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  59  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

9 : calculando con  (+ (+ x x) (/ x -3))
ECM: 0.4924991666666666 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 60
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6935049755408627  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8481140679616979  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05861360873416621  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8260863866886969  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5247219493254778  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8466194659160947  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 0
Mutado: (+ (* x x) (/ x 0))

Número Aleatorio:  0.6141106532650394  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  60  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x 0))
(+ (* x x) (/ x 0))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (+ (* x x) (/ x 0))
Nuevo valor: (/ (- 0 0) (- 5 x))
ECM: 0.038332500000000005 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 61
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8248379359891429  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.6027356294420597  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19404617102549704  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7493107959282309  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40994919964511345  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6314717936063085  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  61  :
0 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (* x x) (- x -5))
ECM: 31.4508325 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 62
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6266618214992324  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9421320431878512  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.25208702917559944  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9317694239588686  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8408787332912117  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 2
Mutado: (+ (* x x) (/ x 2))

Número Aleatorio:  0.24980222512868877  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7257435132000546  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  62  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x 2))
ECM: 0.21083249999999998 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 63
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9302530003443693  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43904130482540116  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22310937164128275  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.26550883066008424  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37009097752776365  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6117379820839768  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  63  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 64
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3224550032734318  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44820621015427975  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.583673555279503  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.975324591948618  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4908595556055494  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0861346018769168  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  64  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 65
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5978644336932251  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9718569371462563  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6744377749182188  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7525354336238952  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6144577087655495  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7156456859986323  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  65  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 66
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1728718111429708  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20816268710154862  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.031795078528282006  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7167162793712244  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08033943418483092  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9121990621387456  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  66  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 67
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7921012191926662  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.34358689322081937  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40253835551134  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.46713961387156566  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9147011881792928  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9739821584033824  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0822152070169575  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  67  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 68
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.40945234690067966  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3222791645096412  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8686399191635327  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: *
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6063716768833166  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08857442629304513  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5883279671711451  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  68  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 69
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.592553328571803  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2754776511447983  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7575224421571446  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03189593354041165  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.30846574092554657  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5410074402476209  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  69  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 70
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.23846546432330062  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05589970761176377  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6117783369906451  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5275715009558811  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5666479828206693  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9182885719321168  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  70  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 71
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.02956113479566136  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4756798392057118  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3541420908119175  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7608941753106422  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9099240415267691  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8835547529837717  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18149269445799032  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  71  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 72
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8712965090783673  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8692096272023871  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: *
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.058015990987413946  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.023950582850619795  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1767028225741547  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8214703935648172  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37361174274176434  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  72  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 73
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.13828298713791243  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.004516313748393341  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6038968006348557  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8542961661517523  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: -
Mutado: (+ (* x x) (- x -3))

Número Aleatorio:  0.2714171922589703  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9510371979657076  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15237787338101938  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  73  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (- x -3))
ECM: 13.0808325 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 74
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3893675551164214  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05635980747094138  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7925466664697947  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31516231499358205  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6137117909986626  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5842572451936002  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  74  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 75
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.15901317089352685  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8584042881975608  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.9717974379057827  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9824046417240917  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9814157184746499  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7390201108427661  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9356374053159298  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13982366872436003  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  75  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 76
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7550158292752758  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9864386863475973  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8793923350129609  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9206282663329008  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8783042599999785  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12055166805201412  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6627326194706447  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9575576521926604  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  76  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 77
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.319061129951146  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27976566915726353  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08366197925986307  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23946347913764432  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2619429951122696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23522181988122615  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  77  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 78
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.292629436104212  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37324737270500274  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9780073348839488  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3905098926392102  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5966572260228951  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8673996129886963  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: -
Mutado: (+ (* x x) (- x -3))

Número Aleatorio:  0.8307795179109414  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -3
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  78  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (- x -3))
ECM: 13.0808325 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 79
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.31063592382303373  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3364212594560795  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5470318210851397  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6153092715850533  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4857240894408512  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13262942102766995  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  79  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 80
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.45468826014782004  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18647417199626526  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.801000025045759  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.7061965848502876  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5595583138232031  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24840501324865416  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  80  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 81
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.22668489971162042  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5577047033490289  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10497114551657483  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8878985848790238  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -2
Mutado: (+ (* x x) (/ x -2))

Número Aleatorio:  0.1996463109780312  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.708824018642163  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  81  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -2))
ECM: 0.008332499999999998 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 82
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6756497010250939  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41987097886293034  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9567201404683718  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3185609502424289  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08657640780615594  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5555934887824494  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  82  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 83
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18794636299027745  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11955210817841444  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.00421982645103669  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09470196154743316  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2206139623986395  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9594204273744827  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  83  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 84
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5280682429596345  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7565931492711745  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4021771450264241  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14505290388987235  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6072256269228985  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9694054825509592  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  84  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 85
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.08789654210690423  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3391080690825393  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02100826004730838  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17944922449118206  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21581646194192028  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19286187796149157  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  85  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 86
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.16743175393785192  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09852148552392237  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6312904540552942  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6786303811667059  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8978325884125887  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7711356434937565  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  86  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 87
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6410289931579388  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5700799851060393  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06490709629963709  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.859819770219647  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8011370837129542  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7705104883164987  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.01663037414499824  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  87  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 88
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5460604670952804  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8765281831923399  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (+ x -3))

Número Aleatorio:  0.7025807944816352  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.932851895746391  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3393932977440417  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.029957664609591483  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2880330699437982  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  88  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (+ x -3))
ECM: 5.9708325 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 89
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.29565273098123634  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3435033553447673  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5974590691695704  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19537510552415727  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2809958025761272  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3158180625446112  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  89  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 90
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6948488439849627  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2047202848970684  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5460513954827809  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43005782626591627  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.808160830715318  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: /
Mutado: (+ (/ x x) (/ x -3))

Número Aleatorio:  0.8464815192442859  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.027859000898680653  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  90  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (/ x x) (/ x -3))
(+ (/ x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (+ (/ x x) (/ x -3))
Nuevo valor: (/ (- 2 x) (* x x))
(/ (- 2 x) (* x x))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (- 2 x) (* x x))
Nuevo valor: (- (/ x -3) (/ -1 -3))
ECM: 0.44361027777777773 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 91
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5779203014994463  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1223992269687082  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7449526522660221  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15861269879379358  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4203970492105874  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23272607701431303  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  91  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 92
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3007133340720889  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37842350678522285  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31684433471435103  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08240532875125339  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6590392911442202  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39147184285354175  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  92  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 93
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9482755055723322  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9350357317363213  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5374367527591822  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21216867600892864  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6180732120658098  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31732771008368565  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2550795523432414  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  93  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 94
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1845639389283097  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6847452067771408  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2568094038420211  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03026695391126788  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8846375458864253  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.400698773847845  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  94  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 95
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8409508688890405  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3813026378466968  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6777209956946402  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3583261755473236  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6251881320762646  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16344707038663286  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  95  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 96
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7902934859414623  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.777654501989843  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.682049542660324  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08778650454931325  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3286463503466275  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9546876932561225  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  96  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 97
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.13529415786687804  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6281561696961723  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9316159507197325  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2623409129968358  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38279226363992147  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.45292360246307584  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  97  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 98
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.10846465532117344  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.342126316811329  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20980335707345776  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5613144848367485  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8908992609262327  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -1
Mutado: (+ (* x x) (/ x -1))

Número Aleatorio:  0.17665340842174648  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  98  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -1))
ECM: 0.12083249999999998 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 99
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14201519105381133  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9537945307792087  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4159652997889455  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18867438032644546  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2344479715131369  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5598096170911702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  99  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 100
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3980182567660365  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5505206341050329  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08440413107083233  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6129042338119274  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9850482839689316  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9182533164548538  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29903717122634244  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  100  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 101
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.44252992660453394  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09187774973629947  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24076334782641207  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05150414315628504  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19956425343305673  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8847743708857736  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Fitness newPopulation  101  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 102
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8285149436080343  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39504838166677614  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4356145150406242  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2203584081154325  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6702413790314188  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5963812326453825  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  102  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 103
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3767676586138273  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8763891675265588  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.3095930314674833  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03863417322112683  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5555988648235007  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3367991766727969  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  103  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 104
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6347311495426177  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05733816689307536  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41697464333456147  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5946352657904156  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8724292002444933  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4717755099807538  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  104  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 105
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9277129525079204  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37453836666652185  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3529146088918884  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1963496410258153  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.71602117416296  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6484915362574913  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  105  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 106
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18905389583735266  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12989766976687112  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.037888879393477404  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7663120151463038  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.32860194088657235  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17188580159486833  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  106  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 107
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9472135292906199  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9796720890211656  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.30671462608825395  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5826873545475627  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8168969225801382  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.5052957375392981  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2777043426371887  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  107  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (+ 0 x) (- x 2))
ECM: 3.4683325 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 108
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.16882144404062582  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.07116343280988491  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5185805597888461  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31910450576023275  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7462874863128885  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6685711747569713  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  108  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 109
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.45409214281634636  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5410890217639303  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8426889594569402  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.4281204867162929  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8199476189029893  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15130827130798985  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43082612374422247  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  109  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (* x 0) (- x x))
ECM: 0.038332500000000005 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 110
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.23001389036818687  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2421915425303689  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8058198966784892  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8952879237934864  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7542216043579832  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38804404664484504  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9693152009660455  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  110  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 111
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14407492729496252  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.257589503007595  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41539797098887443  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9659102294479222  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5264077158489053  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0615915440165441  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  111  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 112
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5958670721831822  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8489870128027626  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4599448277787149  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9960416007623746  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.817866623784521  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.16292075918463378  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8743145404371757  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37927011161812463  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  112  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 113
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2157589628311919  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40063973005184417  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.961879940349635  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19759137484951084  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5887566248624608  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9187356179032055  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4485179039080963  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  113  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 114
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.09504207343895332  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04926174259165139  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39102077029891535  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8746976399154621  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (+ x -3))

Número Aleatorio:  0.6156993679047322  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6104978696403023  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  114  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (+ x -3))
ECM: 5.9708325 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 115
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8760265851212279  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.5508518396390696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9055635398079792  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.008930429803781892  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2583235782956457  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7685452071420552  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9465711934234591  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  115  :
0 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (* (- x 0) (/ -2 x))
(* (- x 0) (/ -2 x))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (* (- x 0) (/ -2 x))
Nuevo valor: (- (* x x) (+ -3 -1))
ECM: 17.1783325 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  2  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 116
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4074504196318087  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9681570371033029  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9297273327025561  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1930424990895211  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36443623846095385  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.32018594180110116  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5867686745070338  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  116  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 117
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9885650521973874  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5324572366081771  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5168213843185373  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2867366840782545  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3831305770593054  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.49971074304853036  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  117  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 118
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14218409633511786  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22439422785188612  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3726185076665145  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3138143703801537  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8694303470037724  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: +
Mutado: (+ (+ x x) (/ x -3))

Número Aleatorio:  0.7740547275191464  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  118  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (+ x x) (/ x -3))
ECM: 0.4924991666666666 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 119
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.04522504426606677  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5015398455804564  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08387722545484866  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15928691386536875  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43830124781715685  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.78687547803177  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  119  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 120
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.02153125228622066  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39519741208345927  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9689360880916669  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7338562503160933  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5516295444277717  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7945773358103891  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  120  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 121
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.18940643208991081  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4211441367329215  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16250346189511422  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4137013907124252  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22597541473643612  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8083887560459982  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: -
Mutado: (+ (- x x) (/ x -3))

Fitness newPopulation  121  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (- x x) (/ x -3))
ECM: 0.13749916666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 122
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6610538507362264  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7122601355186788  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18970024917408213  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4257351914667702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44459482379995696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2815454821081158  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  122  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 123
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9638747280203208  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4765573460684658  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.858288471124757  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: /
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.331145367726817  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27223024887546254  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9666914874346386  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8424410211844167  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.3270317133096702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  123  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 124
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5287821683753796  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.563441048524127  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27316267791951454  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1433906951863534  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6287726900989484  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39988154977438506  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  124  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 125
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1361492893557239  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6386513499019816  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9138550138993285  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.64395316254236  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6656366685170694  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6853737208631184  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  125  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 126
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.93327408693685  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2962902286979505  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7389943404054676  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9474282426081423  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7406983740955271  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8550909395514216  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5066550959527094  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  126  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 127
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.24505985613523162  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4997762562736213  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9179730844354059  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23331617753573153  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29891067184592957  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24970976715379956  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  127  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 128
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.26471066639121266  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9234954665983641  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7126863607853697  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37787085941832077  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5614222532414984  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.653912409464342  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  128  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 129
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14400683130126934  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3781257873165016  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.046309968661709  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15206700737538492  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7713252565741375  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2967975561920374  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  129  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 130
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8094676468567998  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19161833390282712  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5436206095216068  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24915633387617797  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35325406394190806  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43067850409148223  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  130  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 131
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9839827411411717  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9372829081081709  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.316962525523107  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9957833814598748  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20866684167044391  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16112756220121982  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5059237798056966  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  131  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 132
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.49388425098085087  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4380532982387618  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5050495935565158  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0276165429219023  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35974920192567295  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19804133110027133  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  132  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 133
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5829259382168747  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2760209857559758  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9986564695150522  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6774194125786652  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2600640620151795  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5909681778294638  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  133  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 134
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.26594672097027194  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11909550397220525  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4652241307811942  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8125544932383569  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.3443945115609498  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21486107547149746  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  134  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 135
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4439126794646272  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3803287520201635  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8869778337913604  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5228663903504921  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17119897305339127  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5369546453301342  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  135  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 136
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.11737031752981686  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.018433599513208  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02375422392829296  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7603120475490848  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7064871389442977  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.987238255252193  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  136  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 137
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.633408756323103  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8534907570855155  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4259159627910961  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.330183656428928  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2245803119105877  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7953032032237038  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  137  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 138
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.16854170505566635  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.50278252813373  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5387328352835886  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19118851536264958  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.685723288296187  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9837274415823716  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  138  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 139
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3984215952680792  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8083006398915941  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.7948458073571008  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5741029645080663  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4067290256534041  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5745167570842378  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  139  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 140
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.25193628324620476  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35681275270691415  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7496460347898285  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5584950937162744  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3935136699923555  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31857661272882365  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  140  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 141
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3762712685443397  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.568626968634738  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35643885068969927  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0338834869758593  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18801340196162075  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.07478617724406367  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  141  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 142
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6288104419610265  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3390081563500723  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6652550653373225  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.93084457313004  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3122505875166711  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9972385194587314  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5443191441651363  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  142  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 143
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8788646789513158  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7361572791178688  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8297489449566886  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6518736666873696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5780898424209269  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7014886833454042  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3479302567674718  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  143  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 144
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.020084629941509835  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16296941411860433  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5160255758940228  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33631615465273446  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29496936318888434  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.851588327699284  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  144  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 145
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4038032160214138  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08591818575622823  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21582922416112116  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5391810367894416  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9350196860755486  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.07133594608372895  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  145  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 146
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4540190808234338  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20155101288976218  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7328476097700123  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7123433337976282  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8931252491365933  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7436496206021396  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  146  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 147
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.010772835936648795  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6813510536513318  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8394471712183685  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.6803242278226975  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7068625418061351  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7596863193417058  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  147  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 148
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3624081797215819  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09549947558093275  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5197216891013782  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27499539061699974  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7152624609406656  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1978448753964609  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  148  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 149
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1800622280729679  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0657637934392391  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5380097432531099  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9847308936817978  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36652591041411353  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5450640422448314  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  149  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 150
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4608044524146535  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7313176440035603  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9522514665165319  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8633171862180379  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.4327373972143763  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1468978001422535  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8225820410380094  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  150  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 151
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.11258118024025476  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.746930279546989  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16710393788618794  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.32115891386925777  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29468527022333335  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19205452953208002  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  151  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 152
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3605010088580263  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03483441571648227  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6938865614898093  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9997655892784377  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29809073125724106  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0658721357633254  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  152  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 153
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8584455319044662  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.6885580697849012  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10615247634820602  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5940356746605397  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.32560645525702137  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9543825570873217  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7903505090021155  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  153  :
0 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (+ x -4) (- x x))
ECM: 13.660832500000001 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 154
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3537386967010788  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.049283747794138355  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8962996542392776  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7358578775912611  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8214466436841563  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6039011760366697  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8829462132188024  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: -
Mutado: (+ (* x x) (- x -3))

Fitness newPopulation  154  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (- x -3))
ECM: 13.0808325 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 155
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.07590611607917885  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1011070185024866  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8473700627703151  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7761366544452698  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17352724372306683  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7549843501724138  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  155  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 156
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.19432939362932378  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9031847185830513  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4701686504854671  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4641571259741871  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9389556461348008  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6832541581286268  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15413742369573225  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  156  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 157
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4361068738666536  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41228995545743063  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5352203955369536  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6793952811524261  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.48750798228180103  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24589477940958948  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  157  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 158
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9151891279956098  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16735548609632211  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9807024042738881  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2503028103764705  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9017803644351299  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14761414568762432  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24419255522670658  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  158  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 159
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3433012266977561  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7256828609518474  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42894159884589567  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.01017458675265559  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08401413547470038  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9051348597092962  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  159  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 160
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2895707113658734  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6219716763567976  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.28839301436119413  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6888172487507179  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06676741989887247  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6814603597044708  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  160  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 161
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.41560029721908265  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15412854645869623  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2750795571884386  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.870930511441227  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.8865110832916955  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.19051177965546306  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2630469698071458  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  161  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (+ -3 x) (/ 4 3))
ECM: 16.233610277777778 

7 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 162
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7285454555402032  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8799245497440701  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: *
Mutado: (+ (* x x) (* x -3))

Número Aleatorio:  0.21342306694925994  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8216841002381887  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4031816941746412  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6082680779611223  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7265832727154293  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  162  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (* x -3))
ECM: 1.9958325 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 163
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4145600917681028  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.007679194615977436  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5550753725832207  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7483675645732286  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4677530103799987  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.917253025128869  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  163  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 164
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9918554832571645  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13815902494838173  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.609421595406995  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22232959494955207  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.005104268799565936  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19837351730492891  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  164  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 165
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7696066497164502  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.45215180478057493  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9751849256403179  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9891977428305101  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18973773492627577  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4947990521149924  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3127639187199327  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  165  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 166
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.671045494841937  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9089166892421189  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3997820974106119  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2811440218061282  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.540103445172875  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3015595909730635  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  166  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 167
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7904197722031495  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5402716646672506  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3943591490281336  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10831055269608869  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44070514860753063  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15035787926024657  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  167  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 168
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5636549714345437  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0601636049927633  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7463627495355861  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8923233018740593  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12049747429898816  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6174236153475907  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  168  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 169
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.30099768815413697  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6852268093055071  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2452013376304497  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06190156550594961  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2178863698202107  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5877830053408355  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  169  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 170
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.320417889514486  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8341148809087618  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11325600648262801  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23411485110603447  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.525664654243787  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4365293302401001  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  170  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 171
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3632807112596844  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5760889571983792  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7785569731979087  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0491804573090967  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2135290665577827  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5638258750583799  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  171  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 172
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6524395807887873  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22903452960399662  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0756542189745022  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14241340740699338  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.056859130222910226  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.004079444984926961  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  172  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 173
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7874013234032553  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.87773026552902  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31966818424287224  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5491873157175092  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.021521346312959433  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6464119749033073  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  173  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 174
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3705791912318003  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06701793201427997  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29687657313946925  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5672188732983123  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.508229212648157  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4770237113252287  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  174  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 175
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.08377364025197465  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9421718596766769  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5528864106851605  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8015813166969701  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21678991908009282  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04822647822112702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6230604528150037  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  175  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 176
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.11566589189581955  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7123221468854742  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04293802627651111  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2616117960073856  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6187457915433874  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5659011088186642  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  176  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 177
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.12429828072484728  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3857397992493078  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6751519242292245  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21932356732828218  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02872017058969556  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21532305951710884  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  177  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 178
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3900161830227915  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1911759922810925  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7029786141114939  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6773334584991804  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4446519263278753  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9532143413559523  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  178  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 179
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8721116671946794  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: /
Mutado: (+ (/ x x) (/ x -3))

Número Aleatorio:  0.7425178973297634  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1702614149089694  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23986647431512098  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14959534786617457  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05756413059859611  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  179  :
0 : calculando con  (+ (/ x x) (/ x -3))
(+ (/ x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (+ (/ x x) (/ x -3))
Nuevo valor: (- (+ -1 -1) (* x x))
ECM: 6.0549925 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 180
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6221533816087552  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12963681310483355  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3479908336323718  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15072486021831855  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8322306842692707  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.0854191673457545  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  180  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (/ 4 3) (/ 1 1))
ECM: 0.05444361111111107 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 181
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.717539571693037  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9552216547175965  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.034386496591568005  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5030122364850423  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6864142791826785  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15149816474256483  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  181  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 182
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2560990005352193  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27937018133726665  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8463990251172965  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.5333383569051893  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7699634525998879  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8588980348676216  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.511935683616952  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  182  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 183
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6666054388887526  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5462983367411962  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23666065577737871  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8106748964007877  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.5273007822393314  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4283690657680054  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  183  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 6
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (* (- x 4) (* x x))
ECM: 2.115348 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 184
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9429892478774938  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5504611921469843  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7443952923408956  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.49754867513368095  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4876433129752762  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6490208658757614  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  184  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 185
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7858615216063944  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.30306351492663774  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9277751382229997  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22333511648766713  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8682520462168046  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: /
Mutado: (+ (/ x x) (/ x -3))

Número Aleatorio:  0.3449554391654771  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5132480378854825  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  185  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (/ x x) (/ x -3))
(+ (/ x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 7
Anterior: (+ (/ x x) (/ x -3))
Nuevo valor: (/ (/ 0 x) (* x x))
(/ (/ 0 x) (* x x))  evaluado da división por 0, generando nuevo valor de pos 7
Anterior: (/ (/ 0 x) (* x x))
Nuevo valor: (* (+ x -5) (/ 0 0))
(* (+ x -5) (/ 0 0))  evaluado da división por 0, generando nuevo valor de pos 7
Anterior: (* (+ x -5) (/ 0 0))
Nuevo valor: (- (* x x) (/ -3 x))
(- (* x x) (/ -3 x))  evaluado da división por 0, generando nuevo valor de pos 7
Anterior: (- (* x x) (/ -3 x))
Nuevo valor: (/ (- -1 -3) (/ 3 -2))
ECM: 2.1961102777777777 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  4  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 186
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3260883075779898  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37415488761729454  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06445050490049897  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4834361451161274  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1256748382645101  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3091254651231037  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  186  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 187
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.39887442446277577  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6118950767630975  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38482832807134126  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5543057494891778  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8319383888362785  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15106625315343647  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  187  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 188
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.13734987715805347  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2149747719998676  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.470854352915802  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4609442865954806  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.544507596590737  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.29704294013461163  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  188  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 189
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.688761565009907  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14416130017492013  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.829551585501092  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5772807829075309  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7226045891939702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1247326978272606  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  189  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 190
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7888506994220529  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3477363648029893  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3983369603544755  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9087890694625117  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04147900599691223  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5029479846053476  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  190  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 191
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6011778019237815  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8202572774664539  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.09474486351520883  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.408191139163661  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5232645190616254  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22111185320581395  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  191  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (+ -1 x) (- x 5))
ECM: 27.6833325 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 192
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.08345765661149407  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7058772080207483  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0007551652421271537  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41574550742080907  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15908844294265656  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6504600266659631  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  192  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 193
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6315826865038898  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.287734045174302  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6948028933539886  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.559888631073136  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2296562485949114  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33278680986882414  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  193  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 194
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.23825980011025483  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6656419034471126  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8629191780036524  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: +
Mutado: (+ (* x x) (+ x -3))

Número Aleatorio:  0.9932542338929223  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3039152988703018  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3684064408304839  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5551554933106193  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  194  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (+ x -3))
ECM: 5.9708325 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 195
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9485074144322189  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4555799203895352  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9648222163562732  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8124229885728301  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.03691322186357948  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5179985507916735  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7495905030854939  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  195  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 196
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8923062259880797  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: *
Mutado: (+ (* x x) (* x -3))

Número Aleatorio:  0.6278179900307972  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02246024308323391  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39667668405934464  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9860380508383003  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.714951172977513  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.670915219426389  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  196  :
0 : calculando con  (+ (* x x) (* x -3))
ECM: 1.9958325 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 197
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.07051567947510295  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27233538403162594  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9846887074160792  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24371264290150796  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6833945441600557  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0971176219401696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  197  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 198
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.07866736831139087  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7120706555105957  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10409645779886112  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12326688443575662  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.782866737744547  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4561958635143646  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  198  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 199
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6768230168939315  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39397220893401963  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.16355288598244944  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05326274354606819  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6760894172181158  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09944359954113258  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  199  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 200
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.32422654134084383  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21512614585342849  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6876146527737106  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5507575698173157  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.752226534319577  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5733148270009706  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  200  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 201
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.22311856379539963  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9287886501945805  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4951873409968046  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.587431988978316  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04101419670802697  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40267754726059  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  201  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 202
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8405434143861381  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: /
Mutado: (+ (/ x x) (/ x -3))

Número Aleatorio:  0.18479279985277874  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7465887598637828  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9149113540694906  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43119973070723694  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3798305189110577  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0002162188631820161  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  202  :
0 : calculando con  (+ (/ x x) (/ x -3))
(+ (/ x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (+ (/ x x) (/ x -3))
Nuevo valor: (+ (+ -1 x) (/ 0 3))
ECM: 0.5058325 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 203
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7177702901080103  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4033901583210141  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3744206287408013  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06934394096995622  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9508971548839608  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.45278688206257767  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  203  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 204
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6781416120941092  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4620026127836854  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18011260704281862  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7801261508141122  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40284927683903804  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4259728831033446  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  204  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 205
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7568504729966923  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.45221758609741114  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6544621278881289  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3458313839935887  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8377532252776513  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6960832267884429  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  205  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 206
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.10667246029468314  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.28797477226620494  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9032563839097015  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44369083811557586  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5318000938336418  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3600950653502005  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  206  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 207
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8641608327463175  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.757209767851612  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8952861139698226  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.28109651544761094  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.815664713318373  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.046868292397460376  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7752892024272514  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  207  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 208
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5969852171943129  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5768448352644118  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9106800804320281  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9485117683942352  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.47704448977700453  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7386722820214447  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8806837134431579  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  208  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 209
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8288367343975916  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.9902633747007096  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.160517902945009  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7507050212298827  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4073100784436826  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0025982343354585824  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8989137671151001  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -4
Mutado: (+ (* x x) (/ x -4))

Fitness newPopulation  209  :
0 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -4))
ECM: 0.005520000000000003 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 210
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5608782534209404  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9234553137116145  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.009686213055696835  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23739505165045893  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21195644432574468  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03230119482724536  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  210  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 211
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5832352782767003  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9014031259446789  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8457578776754807  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.08069194457371653  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.503327003357968  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.28805445539792207  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9340819914057459  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  211  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 3
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (/ x -3) (* 4 x))
ECM: 6.267499166666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 212
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7357636689175657  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7434748945447743  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33325796830454324  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.716464546746778  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9579768136310252  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6650228556586816  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  212  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 213
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2763463146185353  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.202513523359667  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6804884069017659  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5698988869758569  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42123305559613766  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7460334650923912  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  213  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 214
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4187025091781882  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.32595902964581813  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2006618274513846  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4919155031526622  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7235964323037994  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1575064844112053  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  214  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 215
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8485058665361145  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.8027133534642793  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: /
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35617415390692964  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8233881008384963  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6269806413318718  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.841975499042953  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: -
Mutado: (+ (- x x) (/ x -3))

Número Aleatorio:  0.047786810082699915  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2540660557558949  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  215  :
0 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (- x x) (/ x -3))
ECM: 0.13749916666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 216
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8437487651594084  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7813424508913782  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6318563248939705  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33371719621397533  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4005869837429965  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4667246620143498  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  216  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 217
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.05584830165282262  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7377519001649662  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5312310407286239  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.532728550948543  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5786179445816599  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.760706698146703  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  217  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 218
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5053694223658726  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31966269530221436  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36805907671511673  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.47513997441159916  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8903401237489723  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2824389299174942  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  218  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 219
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.894877354554872  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: /
Mutado: (+ (/ x x) (/ x -3))

Número Aleatorio:  0.04838136160626316  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43300801660163113  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.32979397236729424  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7081787211691907  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6140834495250457  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  219  :
0 : calculando con  (+ (/ x x) (/ x -3))
(+ (/ x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 0
Anterior: (+ (/ x x) (/ x -3))
Nuevo valor: (- (- x 2) (+ -3 4))
ECM: 7.2758325 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 220
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.47224714503287546  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9114277744094802  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9128786622044291  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6581475452331255  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6535548506830544  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8832332245050452  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.6003294396141885  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  220  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 221
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.08712199516622898  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4155652866658822  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8072440740051241  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22630910668722803  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7254376641404163  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.039552824458296776  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  221  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 222
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.07809329673784571  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14503847323337116  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6692475814650892  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8741250718668392  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 1
Mutado: (+ (* x x) (/ x 1))

Número Aleatorio:  0.6894456359081113  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13914171343646053  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  222  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x 1))
ECM: 0.5258325000000001 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 223
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5913726741443082  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9842887778669503  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8403827012213418  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33825765512782413  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20787961454198545  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5899990892751372  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13548860899051696  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  223  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 224
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5577490942062852  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4463663151977162  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7650874570835808  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.40500661765895163  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31820130425669846  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8446106369126015  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Fitness newPopulation  224  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 10
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (* -5 x) (- 5 -3))
ECM: 33.8958325 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 225
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8348330327787005  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.9433930453445041  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5622037697456373  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9470449569624599  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.05419207225863332  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6158218123365473  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7652719239247426  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  225  :
0 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 226
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1237829389704409  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7582601109112517  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5894493391238294  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4798939851329239  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8323803233083942  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18710643852308884  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  226  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 227
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.47163286446898534  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33668071349574724  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2638873216836122  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9018937142753289  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.65758629357238  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6682465434932542  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  227  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 228
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.16527830474187744  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7742944946855169  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0884470533194256  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9999059986671182  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8057164763339648  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.8292810344811429  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.8537428242904853  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: *
Mutado: (+ (* x x) (* x -3))

Número Aleatorio:  0.40007283160840834  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  228  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

8 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (+ x -1) (- x x))
ECM: 0.5058325 

9 : calculando con  (+ (* x x) (* x -3))
ECM: 1.9958325 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 229
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6039742879384775  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4259269988340554  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1977277045109349  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5069994365917104  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8915785090415133  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.11046978220915205  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  229  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 8
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (- (/ x -3) (+ -1 x))
ECM: 0.3299991666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 230
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.23528122145805008  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42354463904904527  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.992558297704286  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6874119841175137  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6850496524427284  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9818051450846687  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0968692612112978  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  230  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 231
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9764794146635744  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6724778682905578  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6031132440195578  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8437664477085158  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.19167408469202618  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23432726587855268  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.047055604822553  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  231  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 232
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4335699603650053  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24385749823542946  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6085141074243245  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2258572117213261  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02567356363494533  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9874260852883896  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  232  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 233
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.08007447882725593  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7747631803246283  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7418046182824029  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9582814376186666  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.909485083970387  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.424452362462156  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6883099845625094  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  233  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 234
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.38658071263582383  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.49767789167195475  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.47159412573012605  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5425906343817037  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.844344211658377  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5656184294538809  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  234  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 235
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6793850205280184  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8969467068472413  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.9601533037290022  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.30814825055515993  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42139473213935563  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5678684378342117  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.051226473971070496  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  235  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 2
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (/ (/ x -4) (* 2 -1))
ECM: 0.017473125000000003 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 236
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.14299511560971545  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4922974294320409  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.30602178731895724  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38928263817165587  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6242775362915551  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03837162979729747  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  236  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 237
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6412410962070604  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15147839804198948  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7653000815044303  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.616666809139842  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5644642378978861  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.023469214850861175  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  237  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 238
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.20052341297948484  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2843283614626063  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7196189155148277  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9774078862161426  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8574411887573695  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3715897181522909  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8685329093949944  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  238  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 239
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4679811296941663  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3603618265806291  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5903049813683151  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9051273160806184  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5162216908885923  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.33860925076307824  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  239  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 240
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.35189911802419993  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19515134288752978  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08295154623577128  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6179072575703732  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20655897658453926  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4280308982204748  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  240  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 241
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.12452034912716692  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7715766032485107  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2770245954316376  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9583979396975841  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08725217786104156  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18911520174205532  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  241  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 242
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4178932991742035  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15442340712987868  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.0021397677267480653  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9081305131370113  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9160355314269318  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9977465252244331  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12835298869650935  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  242  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 243
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5922802876976461  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4327892927979353  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3002314383917587  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.362134498198872  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23256716626274587  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17083989213084028  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  243  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 244
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6677687828589493  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6479256282415993  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.826214428123181  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: /
Mutado: (/ (* x x) (/ x -3))

Número Aleatorio:  0.24368403990157528  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5700613964486684  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02732194144784239  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  244  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (/ (* x x) (/ x -3))
(/ (* x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 4
Anterior: (/ (* x x) (/ x -3))
Nuevo valor: (+ (/ 2 -1) (/ x 4))
ECM: 4.12552 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 245
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7538014998190332  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.08590206959860203  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24153357788634  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7181867842707003  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8457960994136866  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9449521963892817  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09873761180219143  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  245  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 246
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5026129015578643  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4093871633314675  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1229202199266014  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4267031600661234  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5094667214178334  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6651153406064344  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  246  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 247
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.29509065407871415  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15202407307918142  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.768206679150244  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.020261193822673107  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5792886006252921  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.46132531168167  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  247  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 248
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.32959191438125013  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2111957729376125  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23000912489733838  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5023056243466035  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.12265114061761306  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.848567145415323  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: *
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  248  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 249
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.056956782109227944  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4230995353143997  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8220692252889156  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: -1
Mutado: (+ (* x x) (/ x -1))

Número Aleatorio:  0.5014352131274848  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.052206949773971556  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1355955936450336  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  249  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -1))
ECM: 0.12083249999999998 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 250
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6182936222320603  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6214873663366964  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21767566871439326  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5637870148292538  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38416111840726386  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6659768538111863  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  250  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 251
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6218896517331785  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1963221813354188  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.534799663673843  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7456775504374737  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7075746983538872  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.48644413699620115  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  251  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 252
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.8392014221475667  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.920863002951967  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.88222677074083  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6595915529496805  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3803875402847008  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7313501018003897  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.45431047149195614  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  252  :
0 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 253
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5225876296974754  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7351754376155648  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.017939107983232283  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8141755016733101  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.41424327908534264  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10509667484838259  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  253  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 254
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6935796994215424  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7182318748528739  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.30069718029546844  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8387563651163272  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.16922267012857706  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.46015725079710856  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  254  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 255
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6832034819521452  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4681715431444621  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5673672352269797  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.45398563218836874  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.28656246946419595  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6576011558991627  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  255  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 256
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.5546088498389818  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35081212510678605  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.645499676085021  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5657669349046826  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7152202003328897  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03437006929829467  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  256  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 257
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.2755293370070434  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7672248541440015  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6940853331127815  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9903433922541712  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7228084374314878  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7991758370986634  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  257  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 258
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6250604204343203  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4140866145275037  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7243540670076806  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.632227775184169  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7448318363662724  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8242011029226932  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: *
Mutado: (+ (* x x) (/ x -3))

Fitness newPopulation  258  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 259
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.870432148917827  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7172928573378327  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9323767536046978  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03539717969895129  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7044641920334478  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6157468863728851  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22456260894924263  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  259  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 260
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6288439653814613  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8725296946671067  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15902931813042365  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04984208800020873  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5600185979054396  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27594773590183874  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  260  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 261
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7296813965640476  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.576261994717329  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17323821461167543  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.44533382615477635  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9447290508730262  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5431672720770886  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  261  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 262
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7224922073813752  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6933743171325084  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4990571893348642  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8780803002713351  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.011448189526828911  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.527626534745369  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  262  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 263
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4416676727726556  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04557542508443535  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6367694385401023  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2734431459834018  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2183909142543764  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.019592459350853964  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  263  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 264
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7945227291580294  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2573144621517145  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6497415895374974  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8633492182089288  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6029344557510441  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4352809643423433  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  264  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 265
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4352249492579261  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.19064966634149239  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5410690533234769  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.06371672132366357  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7903388634436433  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4392044613352929  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  265  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 266
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6263228802690578  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.15853769165478493  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5780005420454363  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7289026045647456  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11658121777468433  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6631654871753817  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  266  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 267
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.19022295310920356  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.27794410664246927  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2009682832034292  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.49748460558186824  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5090670240072883  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5840494519307317  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  267  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 268
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6845685507263641  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7625189163922099  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2769876425621579  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5421906369723813  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14859331415369725  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4454002209431265  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  268  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 269
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7534033380287389  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8637120885099691  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2316388762796937  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.624543848914185  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3983129320461086  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.20434307565962406  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  269  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 270
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6178330450050641  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.47390137198692794  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.873937645667368  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.6623735760974185  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2059060407887161  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.736191578702451  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  270  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 271
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9444442850195492  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7771851235620427  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9504634701017424  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5720633925511879  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.522945080885229  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2608257981289367  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3622764691556325  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  271  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 272
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1373705231318667  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21651861144538997  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5210771515562193  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10280456839193486  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09504408754239269  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8494445272353865  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Fitness newPopulation  272  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 273
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1213105228000878  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8008990218001041  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: /
Con: /
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.07667611422946785  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38159320799325913  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2971217480877134  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4592038514288901  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  273  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 274
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.33550931255978367  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.37715904327194183  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3533230872187607  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2971510880551841  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.874593036079083  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: -
Mutado: (- (* x x) (/ x -3))

Número Aleatorio:  0.765359446971829  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  274  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (- (* x x) (/ x -3))
ECM: 0.13749916666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 275
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.03296818055781614  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8791541561180705  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.13122668883709543  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6716398718310185  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7131553860424918  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8973782426576434  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9094085747387662  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  275  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 276
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.33749186217533456  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11537549140003622  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9611999982862914  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22314588097559884  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.17752475204886642  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5460115233280789  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  276  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 277
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9628443590361437  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8405097661719055  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 1
Mutado: (+ (* x x) (/ x 1))

Número Aleatorio:  0.8328674944229069  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8891239878479603  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9993161188907803  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9879467972210042  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9697652951363965  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5981437108473981  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5604623343497559  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  277  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x 1))
ECM: 0.5258325000000001 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 278
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.23879459095168243  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.04996418527659252  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9293948103872782  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1459719107042623  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36226145758727124  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9044666616103042  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36093411861029623  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  278  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 279
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.45038246235112267  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.83330770431368  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 4
Mutado: (+ (* x x) (/ x 4))

Número Aleatorio:  0.47196931761300986  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6976544208294899  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5364676798737292  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6182718136580082  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  279  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x 4))
ECM: 0.10677000000000003 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 280
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7037982559314233  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42874805084402023  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8298687460967369  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.6037449037910165  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36942707497431426  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.07063374243203457  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  280  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 281
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.0862094103680775  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.571599095102752  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9051185144830018  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9500358715070386  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5402255188329597  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6293867008347568  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6783491948347783  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  281  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 282
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.17889198735097211  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.50067641453216  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9430348854679397  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.279273843419649  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8147994996445765  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.13658844631144418  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.39627045781955306  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  282  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 283
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7757871416374497  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14470532177933704  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4194414305591513  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.47426011667881174  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4066027073898649  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4674451146206873  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  283  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 284
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.0001939491800181381  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4807890713544144  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.36007100995549013  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8536053767031343  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: -
Mutado: (+ (- x x) (/ x -3))

Número Aleatorio:  0.651342668249665  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24153593280732055  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  284  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (- x x) (/ x -3))
ECM: 0.13749916666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 285
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.48624315551391917  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.14711245661700523  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9472700064515261  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.48300876582399577  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2911971962237353  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.03388672610375665  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  285  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 286
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3659624779522368  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42791772312321674  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.01871399353402603  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.10369612560067376  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31468042533604157  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.23590691324841495  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  286  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 287
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7930316727073067  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.43955177734627515  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7130457501166796  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5553328785253047  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9576430291020013  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9851324925510212  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7245926509597848  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  287  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 288
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.48292234374149656  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.18580800612173176  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21197250686500702  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5538440628156294  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.64045700698929  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5696443079669368  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  288  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 289
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.4944726430862584  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02045618672787619  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4645441108451903  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5586329574461091  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8828086394753024  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: x
Con: x
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7142365847265689  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  289  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 290
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.1488734767607841  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8557242951356031  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: *
Mutado: (* (* x x) (/ x -3))

Número Aleatorio:  0.8900696661153965  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: +
Con: +
Mutado: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3724505518190574  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5494017148875231  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4876132477518894  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4102180659923452  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  290  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (* (* x x) (/ x -3))
ECM: 0.08947866666666666 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 291
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.32591543681226975  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1985385572071794  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.012298210101933438  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2834268049258315  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3135681012856919  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9981838032006772  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Fitness newPopulation  291  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 292
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9860181448846659  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8121498680655715  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: *
Con: /
Mutado: (+ (/ x x) (/ x -3))

Número Aleatorio:  0.46511341796767525  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.09417147254878255  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1940761265108233  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6419539721879458  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38866158915285687  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  292  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (/ x x) (/ x -3))
(+ (/ x x) (/ x -3))  evaluado da división por 0, generando nuevo valor de pos 1
Anterior: (+ (/ x x) (/ x -3))
Nuevo valor: (+ (+ x 5) (* -2 x))
ECM: 19.600832500000003 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  1  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 293
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6717637983765649  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5195206765667474  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5704935700720972  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4475230392943209  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22713896979702897  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6957355336680892  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  293  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 294
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.17025767671247882  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.1595886568501268  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7733312480248534  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.42688484811168403  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6994294818908346  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.22865800518588864  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  294  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 295
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.6380924862448661  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.21277594979351933  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6118200376065998  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.24452927805568192  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2735493234690204  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38027195825699744  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  295  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 296
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.9821810763667099  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6418421305721855  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6094369728712391  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.35940852721448135  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3185371276480605  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9756314273640958  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7182463781984302  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  296  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 297
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.3483338276684397  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.07228767943338987  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9331689371412384  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.11631965480095618  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4737260275024442  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.7497411606605514  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  297  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 298
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.30421025470836294  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.3914482539083187  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.02986954170226508  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5966343275569592  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.8864960220821164  entonces: Se Muta

Mutamos: (+ (* x x) (/ x -3))
Mutaremos: -3
Con: 4
Mutado: (+ (* x x) (/ x 4))

Número Aleatorio:  0.08342748833592095  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  298  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x 4))
ECM: 0.10677000000000003 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 299
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.21191410798803267  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.5801137421995567  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9538872610237237  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.4931474387068766  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2236489978778161  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9085202644804999  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.38741108715909256  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  299  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

11 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

GENERACION: 300
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Población:
 ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
Fitness:
 [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]
Probabilidad: [0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1]
Probabilidad acum: [0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]

Número Aleatorio:  0.7257779161767256  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.6139052550668643  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.9833499930514658  entonces: Se reproduce

Padre1/Hijo1: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2515173379672967  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.2509450011529972  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Número Aleatorio:  0.31298240491668683  entonces: Se cruza

Padre 1:  (+ (* x x) (/ x -3))  --  Padre 2: (+ (* x x) (/ x -3))
Hijo 1:  (+ (* x x) (/ x -3))  --  Hijo 2: (+ (* x x) (/ x -3))

Fitness newPopulation  300  :
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

10 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']
0 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

1 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

2 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

3 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

4 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

5 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

6 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

7 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

8 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

9 : calculando con  (+ (* x x) (/ x -3))
ECM: 0.002499166666666667 

Se realizaron  0  modificaciones a la población.
Fitness: [0.00249917 0.00249917 0.00249917 0.00249917 0.00249917 0.00249917
 0.00249917 0.00249917 0.00249917 0.00249917]

Nueva población: ['(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))' '(+ (* x x) (/ x -3))'
 '(+ (* x x) (/ x -3))']

FIN DEL PROCESO 01-05-2019 22:37:51
Tiempo: 19.006320238113403
